{"version":3,"file":"vvd-core.js","sourceRoot":"","sources":["src/vvd-core.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,IAAI,SAAS,EAAE,MAAM,gCAAgC,CAAC;AACnE,OAAO,aAAa,MAAM,oBAAoB,CAAC;AAG/C,MAAM,qBAAqB,GAAG,kBAAkB,EAC/C,eAAe,GAAG,MAAM,EACxB,wBAAwB,GAAG,CAAC,QAAQ,CAAC,CAAC;AAUvC,IAAI,gBAAkD,CAAC;AACvD,MAAM,oBAAoB,GAAG,mBAAmB,EAAE,CAAC;AACnD,IAAI,oBAAoB,CAAC,QAAQ,EAAE;IAClC,gBAAgB,GAAG,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;CAC7D;KAAM;IACN,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAChC,+BAA+B,eAAe,QAAQ,CACtD,CAAC;CACF;AAED,eAAe,MAAM,CAAC,MAAM,CAAC;IAC5B,GAAG,EAAE,sBAAsB;IAC3B,OAAO,EAAE,gBAAgB;CACzB,CAAC,CAAC;AAEH,KAAK,UAAU,sBAAsB,CACpC,aAAqC;IAErC,sBAAsB,CAAC,aAAa,CAAC,CAAC;IACtC,OAAO,mBAAmB,CAAC,aAAa,CAAC,CAAC;AAC3C,CAAC;AAED,KAAK,UAAU,mBAAmB,CACjC,aAAqC;IAErC,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACpC,SAAS,EAAE;QACX,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC;KACvC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC,MAAM,CAAC;QACpB,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;KACrB,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,mBAAmB;IAC3B,MAAM,MAAM,GAAyB;QACpC,QAAQ,EAAE,IAAI;KACd,CAAC;IACF,MAAM,mBAAmB,GAAG,QAAQ,CAAC,eAAe,CAAC,YAAY,CAChE,qBAAqB,CACrB,CAAC;IACF,IAAI,mBAAmB,KAAK,eAAe,EAAE;QAC5C,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;KACxB;SAAM,IAAI,mBAAmB,EAAE;QAC/B,MAAM,MAAM,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;QACzD,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KAC9B;IACD,OAAO,MAAM,CAAC;AACf,CAAC;AAED,SAAS,sBAAsB,CAAC,aAAqC;IACpE,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CACpD,CAAC,CAAC,EAAE,CAAC,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC1C,CAAC;IAEF,IAAI,WAAW,CAAC,MAAM,EAAE;QACvB,OAAO,CAAC,IAAI,CACX,oCAAoC,WAAW,oBAAoB,wBAAwB,YAAY,CACvG,CAAC;KACF;AACF,CAAC;AAED,SAAS,oBAAoB,CAAC,KAAa;IAC1C,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACzC,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;QACtC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC1B,IAAI,MAAM,CAAC,MAAM,EAAE;gBAClB,OAAO,CAAC,KAAK,CACZ,+DAA+D,MAAM,CAAC,MAAM,qBAAqB,CACjG,CAAC;aACF;iBAAM;gBACN,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;aAC7C;SACD;aAAM;YACN,OAAO,CAAC,IAAI,CAAC,sBAAsB,KAAK,oBAAoB,CAAC,CAAC;SAC9D;QACD,OAAO,MAAM,CAAC;IACf,CAAC,EAAE,EAA6B,CAAC,CAAC;AACnC,CAAC","sourcesContent":["import { init as initFonts } from '@vonage/vvd-fonts/vvd-fonts.js';\nimport schemeService from '@vonage/vvd-scheme';\nimport type { SchemeOption } from '@vonage/vvd-scheme';\n\nconst VVD_CONTEXT_ATTRIBUTE = 'data-vvd-context',\n\tNONE_INIT_VALUE = 'none',\n\tVALID_CONFIGURATION_KEYS = ['scheme'];\n\nexport interface Configuration {\n\tscheme?: SchemeOption;\n}\n\ninterface InitialConfiguration extends Configuration {\n\tautoInit: boolean;\n}\n\nlet coreAutoInitDone: Promise<Record<string, unknown>>;\nconst initialConfiguration = _buildConfiguration();\nif (initialConfiguration.autoInit) {\n\tcoreAutoInitDone = _applyConfiguration(initialConfiguration);\n} else {\n\tcoreAutoInitDone = Promise.reject(\n\t\t`auto-init unavailable when '${NONE_INIT_VALUE}' used`\n\t);\n}\n\nexport default Object.freeze({\n\tset: safeApplyConfiguration,\n\tsettled: coreAutoInitDone,\n});\n\nasync function safeApplyConfiguration(\n\tconfiguration: Partial<Configuration>\n): Promise<Record<string, unknown>> {\n\t_validateConfiguration(configuration);\n\treturn _applyConfiguration(configuration);\n}\n\nasync function _applyConfiguration(\n\tconfiguration: Partial<Configuration>\n): Promise<Record<string, unknown>> {\n\tconst allResults = await Promise.all([\n\t\tinitFonts(),\n\t\tschemeService.set(configuration.scheme),\n\t]);\n\treturn Object.freeze({\n\t\tfonts: allResults[0],\n\t\tscheme: allResults[1],\n\t});\n}\n\nfunction _buildConfiguration(): InitialConfiguration {\n\tconst result: InitialConfiguration = {\n\t\tautoInit: true,\n\t};\n\tconst vvdContextAttrValue = document.documentElement.getAttribute(\n\t\tVVD_CONTEXT_ATTRIBUTE\n\t);\n\tif (vvdContextAttrValue === NONE_INIT_VALUE) {\n\t\tresult.autoInit = false;\n\t} else if (vvdContextAttrValue) {\n\t\tconst parsed = _parseVvdContextAttr(vvdContextAttrValue);\n\t\tObject.assign(result, parsed);\n\t}\n\treturn result;\n}\n\nfunction _validateConfiguration(configuration: Partial<Configuration>) {\n\tconst extraParams = Object.keys(configuration).filter(\n\t\tk => !VALID_CONFIGURATION_KEYS.includes(k)\n\t);\n\n\tif (extraParams.length) {\n\t\tconsole.warn(\n\t\t\t`unexpected configuration part/s '${extraParams}',\tonly some of '${VALID_CONFIGURATION_KEYS}' expected`\n\t\t);\n\t}\n}\n\nfunction _parseVvdContextAttr(value: string): Record<string, unknown> {\n\tconst tokens = value.trim().split(/\\s+/);\n\treturn tokens.reduce((result, token) => {\n\t\tif (/^theme:/.test(token)) {\n\t\t\tif (result.scheme) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`theme vivid context defined multiple times, only the first (${result.scheme}) will be effective`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult.scheme = token.replace(/^theme:/, '');\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(`unsupported token '${token}' in vivid context`);\n\t\t}\n\t\treturn result;\n\t}, {} as Record<string, unknown>);\n}\n"]}