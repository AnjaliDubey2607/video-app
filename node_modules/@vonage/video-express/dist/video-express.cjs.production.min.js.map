{"version":3,"file":"video-express.cjs.production.min.js","sources":["../../node_modules/regenerator-runtime/runtime.js","../src/utils/dom.ts","../src/mp/styles.ts","../src/mp/config-store.ts","../src/logging.ts","../src/utils/array.ts","../src/internal/hidden-tile-tracker.ts","../src/internal/video-overlay/audio-button.ts","../src/internal/video-overlay/display-name.ts","../src/internal/video-overlay/network-quality-warning.ts","../src/internal/video-overlay/overlay.ts","../src/internal/subscriber.ts","../src/analytics.ts","../src/assets/icons/smile/index.ts","../src/mp/camera-subscriber.ts","../src/mp/layout-manager.ts","../src/mp/get-devices.ts","../src/mp/get-device-id.ts","../src/internal/publisher.ts","../src/mp/camera-publisher.ts","../src/mp/screen-publisher.ts","../src/mp/screen-subscriber.ts","../src/mp/speaker-detection.ts","../src/mp/active-speaker-tracker.ts","../src/internal/participant.ts","../src/mp/participant.ts","../src/utils/object.ts","../src/utils/is-mobile.ts","../src/utils/promise.ts","../src/internal/local-participant.ts","../src/mp/local-participant.ts","../src/internal/room.ts","../src/mp/room/index.ts","../src/mp/preview-publisher.ts","../src/mp/get-active-audio-output-device.ts","../src/mp/get-audio-output-devices.ts","../src/mp/set-proxy-url.ts","../src/mp/set-audio-output-device.ts","../src/index.ts","../src/mp/has-media-processor-support.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const getTargetElementFromDOM = (\n  element?: HTMLElement | string\n): HTMLElement => {\n  if (element instanceof HTMLElement) {\n    return element;\n  } else if (typeof element === 'string') {\n    const ele = document.getElementById(element);\n    if (!ele) throw new Error(`Invalid element. Element not found: ${element}`);\n    return ele;\n  } else {\n    throw new Error(`element must be string or HTMLElement. Found: ${element}`);\n  }\n};\n\nexport const createDiv = (\n  id: string,\n  style: Record<string, string> = {}\n): HTMLElement => {\n  const element: HTMLElement = document.createElement('div');\n  element.id = id;\n\n  Object.entries(style).forEach(([key, value]) => {\n    element.style.setProperty(key, value);\n  });\n  return element;\n};\n","import jss, { JssStyle } from 'jss';\nimport preset from 'jss-preset-default';\nimport camelCase from 'jss-plugin-camel-case';\n\n// One time setup with default plugins and settings.\njss.setup(preset());\njss.use(camelCase());\n\nexport const createStyles = (styles: Record<string, JssStyle>) => {\n  const { classes } = jss.createStyleSheet(styles).attach();\n  return classes;\n};\n","let proxyUrl: string;\n\nconst ConfigStore = {\n  setProxyUrl: (url: string) => {\n    proxyUrl = url;\n  },\n  getProxyUrl: () => proxyUrl,\n};\n\nexport default ConfigStore;\n","/* eslint-disable no-console */\nexport const logLevel = {\n  NONE: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  DEBUG: 4,\n} as const;\n\nexport type LogLevel = typeof logLevel[keyof typeof logLevel];\n\nlet currentLogLevel: LogLevel = logLevel.NONE;\n\nexport const setLogLevel = (level: LogLevel) => {\n  if (Object.values(logLevel).includes(level)) {\n    currentLogLevel = level;\n  } else {\n    console.error('Attempting to set invalid log level: ', level);\n  }\n};\n\nexport const getLogLevel = () => currentLogLevel;\n\nexport const logger = {\n  error: (...args: any) => {\n    if (currentLogLevel >= logLevel.ERROR) {\n      console.error(...args);\n    }\n  },\n  warn: (...args: any) => {\n    if (currentLogLevel >= logLevel.WARN) {\n      console.warn(...args);\n    }\n  },\n  info: (...args: any) => {\n    if (currentLogLevel >= logLevel.INFO) {\n      console.info(...args);\n    }\n  },\n  debug: (...args: any) => {\n    if (currentLogLevel >= logLevel.DEBUG) {\n      console.debug(...args);\n    }\n  },\n};\n","export const removeItem = (array: Array<any>, item: any) => {\n  const index = array.indexOf(item);\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n};\n","import { removeItem } from '../utils/array';\n\nexport default class HiddenTileTracker {\n  readonly PARTICIPANT_DISPLAY_LIMIT: Number;\n  _currentActiveSpeakerElement?: HTMLElement;\n  hiddenElements: Array<HTMLElement> = [];\n  visibleElements: Array<HTMLElement> = [];\n  /*\n   * Array of video elements ordered by display priority\n   * i.e. first entry is the current active speaker or a new participant.\n   * The last entry is the participant with longest time since speaking or joining\n   */\n  _elementsOrderedByDisplayPriority: Array<HTMLElement> = [];\n\n  constructor(maxVideoParticipantsOnScreen: Number) {\n    this.PARTICIPANT_DISPLAY_LIMIT = maxVideoParticipantsOnScreen;\n  }\n\n  _removeLastActiveVisibleElement() {\n    let lastActiveVisibleElement = this.visibleElements[0];\n    this.visibleElements.forEach(element => {\n      if (\n        this._elementsOrderedByDisplayPriority.indexOf(element) <\n        this._elementsOrderedByDisplayPriority.indexOf(lastActiveVisibleElement)\n      ) {\n        lastActiveVisibleElement = element;\n      }\n    });\n    removeItem(this.visibleElements, lastActiveVisibleElement);\n    this.hiddenElements.push(lastActiveVisibleElement);\n  }\n\n  onActiveSpeakerChanged(element?: HTMLElement) {\n    this._currentActiveSpeakerElement = element;\n    if (element) {\n      removeItem(this._elementsOrderedByDisplayPriority, element);\n      this._elementsOrderedByDisplayPriority.push(element);\n\n      if (this.hiddenElements.includes(element)) {\n        removeItem(this.hiddenElements, this._currentActiveSpeakerElement);\n        this.visibleElements.push(element);\n      }\n\n      if (this.visibleElements.length > this.PARTICIPANT_DISPLAY_LIMIT) {\n        this._removeLastActiveVisibleElement();\n      }\n    }\n  }\n\n  onSubscriberCreated(element: HTMLElement) {\n    if (this.visibleElements.length >= this.PARTICIPANT_DISPLAY_LIMIT) {\n      this._removeLastActiveVisibleElement();\n    }\n    this.visibleElements.push(element);\n    this._elementsOrderedByDisplayPriority.push(element);\n  }\n\n  onSubscriberRemoved(element: HTMLElement) {\n    removeItem(this.hiddenElements, element);\n    removeItem(this.visibleElements, element);\n    removeItem(this._elementsOrderedByDisplayPriority, element);\n    if (\n      this.visibleElements.length < this.PARTICIPANT_DISPLAY_LIMIT &&\n      this.hiddenElements.length > 0\n    ) {\n      const elementToShow = this.hiddenElements.pop();\n      if (elementToShow) {\n        this.visibleElements.push(elementToShow);\n      }\n    }\n  }\n}\n","import { createStyles } from '../../mp/styles';\nimport iconMicMuted from '../../assets/icons/mic-muted.svg';\nimport iconMicEnabled from '../../assets/icons/mic-enabled.svg';\nimport iconAudioMuted from '../../assets/icons/audio-muted.svg';\nimport iconAudioEnabled from '../../assets/icons/audio-enabled.svg';\n\nconst classes = createStyles({\n  audioButton: {\n    position: 'absolute',\n    left: 12,\n    bottom: 12,\n    height: 24,\n    width: 24,\n    background: 'rgba(0, 0, 0, 0.5)',\n    backdropFilter: 'blur(15px)',\n    borderRadius: 6,\n    opacity: 0,\n    'transition-property': 'opacity',\n    'transition-duration': '0.5s',\n    'transition-timing-function': 'ease-in',\n    '&:hover': {\n      background: '#000000',\n    },\n    '&.audio-disabled': {\n      background: '#E61D1D',\n      opacity: 1,\n    },\n    '&:hover.audio-disabled': {\n      background: '#9F0202',\n    },\n    '&.audio-enabled .icon-disabled': {\n      display: 'none',\n    },\n    '&.audio-disabled .icon-enabled': {\n      display: 'none',\n    },\n    '&.subscriber-audio-button': {\n      display: 'none',\n    },\n  },\n  icon: {\n    height: 12,\n    width: 12,\n  },\n});\n\nconst createSvgIcon = (svgSrc: string, ...otherClasses: Array<string>) => {\n  const icon = document.createElement('img');\n  icon.src = svgSrc;\n  icon.classList.add(classes.icon, ...otherClasses);\n  return icon;\n};\n\nconst createAudioToggleButton = ({\n  isAudioEnabled,\n  enabledIcon,\n  disabledIcon,\n  type,\n}: {\n  isAudioEnabled: boolean;\n  enabledIcon: HTMLImageElement;\n  disabledIcon: HTMLImageElement;\n  type: 'publisher' | 'subscriber';\n}) => {\n  const button = document.createElement('button');\n  button.classList.add(\n    classes.audioButton,\n    'video-audio-button',\n    type === 'publisher' ? 'publisher-audio-button' : 'subscriber-audio-button'\n  );\n\n  button.appendChild(enabledIcon);\n  button.appendChild(disabledIcon);\n\n  if (isAudioEnabled) {\n    button.classList.add('audio-enabled');\n  } else {\n    button.classList.add('audio-disabled');\n  }\n\n  return {\n    element: button,\n    setEnabled() {\n      button.classList.remove('audio-disabled');\n      button.classList.add('audio-enabled');\n    },\n    setDisabled() {\n      button.classList.remove('audio-enabled');\n      button.classList.add('audio-disabled');\n    },\n  };\n};\n\nexport type AudioToggleButton = {\n  element: HTMLButtonElement;\n  setEnabled: () => void;\n  setDisabled: () => void;\n};\nexport const createPublisherAudioToggleButton = (\n  isAudioEnabled: boolean\n): AudioToggleButton => {\n  const disabledIcon = createSvgIcon(iconMicMuted, 'icon-disabled');\n  const enabledIcon = createSvgIcon(iconMicEnabled, 'icon-enabled');\n  return createAudioToggleButton({\n    isAudioEnabled,\n    enabledIcon,\n    disabledIcon,\n    type: 'publisher',\n  });\n};\n\nexport const createSubscriberAudioToggleButton = (\n  isAudioEnabled: boolean\n): AudioToggleButton => {\n  const disabledIcon = createSvgIcon(iconAudioMuted, 'icon-disabled');\n  const enabledIcon = createSvgIcon(iconAudioEnabled, 'icon-enabled');\n  return createAudioToggleButton({\n    isAudioEnabled,\n    enabledIcon,\n    disabledIcon,\n    type: 'subscriber',\n  });\n};\n","import { createStyles } from '../../mp/styles';\n\nconst classes = createStyles({\n  name: {\n    background: 'rgba(0, 0, 0, 0.5)',\n    backdropFilter: 'blur(15px)',\n    borderRadius: '6px',\n    paddingLeft: '8px',\n    paddingRight: '8px',\n    textAlign: 'center',\n    fontSize: '14px',\n    fontStyle: 'normal',\n    lineHeight: '24px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    maxWidth: '80%',\n    marginLeft: '12px',\n  },\n});\nexport const createNameDisplay = (name: string) => {\n  const div = document.createElement('div');\n  div.innerText = name;\n  div.classList.add(classes.name, 'participant-name');\n  return div;\n};\n","import { createStyles } from '../../mp/styles';\nimport iconNetworkQualityPoor from '../../assets/icons/red-wifi.svg';\n\nconst classes = createStyles({\n  networkQualityWarning: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '24px',\n    minWidth: '24px',\n    background: 'rgba(0, 0, 0, 0.5)',\n    backdropFilter: 'blur(15px)',\n    borderRadius: '6px',\n    opacity: 0,\n  },\n  networkQualityIcon: {\n    width: '20px',\n    height: '20px',\n  },\n  active: {\n    opacity: 1,\n  },\n});\n\ntype NetworkQualityWarning = {\n  element: HTMLElement;\n  show: () => void;\n  hide: () => void;\n};\n\nexport const createNetworkQualityWarning = (): NetworkQualityWarning => {\n  const div = document.createElement('div');\n  div.classList.add(classes.networkQualityWarning, 'network-quality-warning');\n  const icon = document.createElement('img');\n  icon.src = iconNetworkQualityPoor;\n  icon.classList.add(\n    classes.networkQualityIcon,\n    'network-quality-warning-icon'\n  );\n  div.appendChild(icon);\n  return {\n    element: div,\n    show: () => div.classList.add(classes.active),\n    hide: () => div.classList.remove(classes.active),\n  };\n};\n","import { EventEmitter } from 'events';\nimport { logger } from '../../logging';\nimport { createDiv } from '../../utils/dom';\nimport { createStyles } from '../../mp/styles';\nimport {\n  createPublisherAudioToggleButton,\n  createSubscriberAudioToggleButton,\n} from './audio-button';\nimport { createNameDisplay } from './display-name';\nimport { createNetworkQualityWarning } from './network-quality-warning';\n\nconst classes = createStyles({\n  videoOverlay: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    zIndex: 1, // opentok overlay has z-index 1.\n    '&:hover .video-audio-button': {\n      opacity: 1,\n    },\n  },\n  bottomRightContainer: {\n    maxWidth: 'calc(100% - 68px)',\n    position: 'absolute',\n    bottom: 12,\n    top: 'auto',\n    right: 12,\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end',\n  },\n});\n\nexport type VideoOverlay = {\n  on(event: 'toggleAudioClicked', listener: () => void): void;\n  emit(event: 'toggleAudioClicked'): void;\n  setAudioEnabled: () => void;\n  setAudioDisabled: () => void;\n  showNetworkQualityWarning: () => void;\n  hideNetworkQualityWarning: () => void;\n};\n\nconst createOverlay = ({\n  targetId,\n  participantName,\n  isAudioEnabled,\n  type,\n}: {\n  targetId: string;\n  participantName?: string;\n  isAudioEnabled: boolean;\n  type: 'publisher' | 'subscriber';\n}): VideoOverlay | undefined => {\n  const targetVideoContainerDiv = document.getElementById(targetId);\n  if (!targetVideoContainerDiv) {\n    logger.warn('Target div not found when creating overlay: ', targetId);\n    return;\n  }\n\n  let overlayClass;\n  let overlayId;\n  let audioToggleButton;\n  if (type === 'publisher') {\n    overlayClass = 'MP_publisher_overlay';\n    overlayId = 'MP_camera_publisher_default_controls';\n    audioToggleButton = createPublisherAudioToggleButton(isAudioEnabled);\n  } else {\n    overlayClass = 'MP_subscriber_overlay';\n    overlayId = `MP_${targetId}_default_controls`;\n    audioToggleButton = createSubscriberAudioToggleButton(isAudioEnabled);\n  }\n\n  const overlayDiv = createDiv(overlayId);\n  overlayDiv.classList.add(classes.videoOverlay, overlayClass);\n\n  overlayDiv.appendChild(audioToggleButton.element);\n\n  const bottomRightContainer = document.createElement('div');\n  bottomRightContainer.classList.add(classes.bottomRightContainer);\n  const networkQualityWarning = createNetworkQualityWarning();\n  bottomRightContainer.appendChild(networkQualityWarning.element);\n  if (participantName) {\n    const nameElement = createNameDisplay(participantName);\n    bottomRightContainer.appendChild(nameElement);\n  }\n  overlayDiv.appendChild(bottomRightContainer);\n\n  targetVideoContainerDiv.appendChild(overlayDiv);\n\n  const overlay = Object.assign(new EventEmitter(), {\n    setAudioEnabled: audioToggleButton.setEnabled,\n    setAudioDisabled: audioToggleButton.setDisabled,\n    showNetworkQualityWarning: networkQualityWarning.show,\n    hideNetworkQualityWarning: networkQualityWarning.hide,\n  });\n\n  audioToggleButton.element.addEventListener('click', () => {\n    overlay.emit('toggleAudioClicked');\n  });\n\n  return overlay;\n};\n\nexport const createPublisherOverlay = ({\n  id,\n  isAudioEnabled,\n  participantName,\n}: {\n  id: string;\n  isAudioEnabled: boolean;\n  participantName?: string;\n}): VideoOverlay | undefined =>\n  createOverlay({\n    targetId: id,\n    isAudioEnabled,\n    participantName,\n    type: 'publisher',\n  });\n\nexport const createSubscriberOverlay = ({\n  id,\n  participantName,\n}: {\n  id: string;\n  participantName: string;\n}): VideoOverlay | undefined =>\n  createOverlay({\n    targetId: id,\n    isAudioEnabled: true,\n    participantName,\n    type: 'subscriber',\n  });\n","import OT from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport { throttle } from 'lodash';\nimport { logger } from '../logging';\nimport { createSubscriberOverlay, VideoOverlay } from './video-overlay/overlay';\n\ndeclare interface Subscriber {\n  on(event: 'audioLevelUpdated', listener: (audioLevel: number) => void): this;\n  on(event: 'videoElementCreated', listener: () => void): this;\n  on(event: 'destroyed', listener: () => void): this;\n}\n\nclass Subscriber extends EventEmitter {\n  otSubscriber: OT.Subscriber;\n  id: string | undefined;\n  overlay: VideoOverlay | undefined;\n  _subscribingToAudio: boolean;\n\n  constructor(otSubscriber: OT.Subscriber) {\n    super();\n    this.otSubscriber = otSubscriber;\n    this.id = otSubscriber.id;\n    this._subscribingToAudio = true;\n\n    const _onAudioLevelUpdated = (event: { audioLevel: number }) => {\n      this.emit('audioLevelUpdated', event.audioLevel);\n    };\n\n    const audioLevelUpdatedHandler = throttle(_onAudioLevelUpdated, 60, {\n      // So we don't send events after stream is destroyed\n      leading: true,\n      trailing: false,\n    });\n\n    this.otSubscriber.on('audioLevelUpdated', audioLevelUpdatedHandler);\n    this.otSubscriber.on('destroyed', () => this.emit('destroyed'));\n    this.otSubscriber.on('videoElementCreated', () => {\n      if (this.otSubscriber?.stream?.videoType !== 'screen') {\n        if (this.id) {\n          this.overlay = createSubscriberOverlay({\n            id: this.id,\n            participantName: this.otSubscriber.stream?.name ?? '',\n          });\n          this.overlay?.on('toggleAudioClicked', () => {\n            this._toggleAudioEnabled();\n          });\n        } else {\n          logger.warn('Subscriber id undefined when trying to create overlay');\n        }\n      }\n      this.emit('videoElementCreated');\n    });\n    this.otSubscriber.on('videoDisableWarning', () =>\n      this.overlay?.showNetworkQualityWarning()\n    );\n    this.otSubscriber.on('videoDisableWarningLifted', () =>\n      this.overlay?.hideNetworkQualityWarning()\n    );\n    this.otSubscriber.on('videoDisabled', ({ reason }) => {\n      if (reason === 'quality') {\n        this.overlay?.showNetworkQualityWarning();\n      }\n    });\n    this.otSubscriber.on('videoEnabled', ({ reason }) => {\n      if (reason === 'quality') {\n        this.overlay?.hideNetworkQualityWarning();\n      }\n    });\n  }\n  _toggleAudioEnabled = () => {\n    if (this._subscribingToAudio) {\n      this.disableAudio();\n    } else {\n      this.enableAudio();\n    }\n  };\n\n  getSubscriberElement = () => this.otSubscriber?.element;\n\n  isVideoEnabled = (): boolean => !!this.otSubscriber?.stream?.hasVideo;\n\n  isAudioEnabled = (): boolean => !!this.otSubscriber?.stream?.hasAudio;\n\n  _setSubscribeToVideo = (shouldSubscribe: boolean): void =>\n    this.otSubscriber?.subscribeToVideo(shouldSubscribe);\n  enableVideo = (): void => {\n    this.otSubscriber?.subscribeToVideo(true);\n  };\n\n  disableVideo = (): void => this.otSubscriber?.subscribeToVideo(false);\n\n  enableAudio = (): void => {\n    this.otSubscriber?.subscribeToAudio(true);\n    this._subscribingToAudio = true;\n    this.overlay?.setAudioEnabled();\n  };\n\n  disableAudio = (): void => {\n    this.otSubscriber?.subscribeToAudio(false);\n    this._subscribingToAudio = false;\n    this.overlay?.setAudioDisabled();\n  };\n\n  setDisabledImageURI = (imageURI: string): void => {\n    this.otSubscriber?.setStyle('backgroundImageURI', imageURI);\n  };\n}\n\nexport default Subscriber;\n","import OTKAnalytics from 'opentok-solutions-logging';\nimport ConfigStore from './mp/config-store';\n\n/** Analytics */\n\nconst logVariation = {\n  attempt: 'Attempt',\n  success: 'Success',\n  failure: 'Failure',\n} as const;\n\nconst logAction = {\n  // vars for the analytics logs. Internal use\n  initRoom: 'InitRoom',\n  joinRoom: 'JoinRoom',\n  leaveRoom: 'LeaveRoom',\n  startScreenSharing: 'StartScreenSharing',\n  stopScreenSharing: 'StopScreenSharing',\n  publishCameraPublisher: 'PublishCameraPublisher',\n  destroyCameraPublisher: 'DestroyCameraPublisher',\n  cameraPublisherEnableVideo: 'CameraPublisherEnableVideo',\n  cameraPublisherEnableAudio: 'CameraPublisherEnableAudio',\n  cameraPublisherDisableVideo: 'CameraPublisherDisableVideo',\n  cameraPublisherDisableAudio: 'CameraPublisherDisableAudio',\n  screenPublisherEnableVideo: 'ScreenPublisherEnableVideo',\n  screenPublisherEnableAudio: 'ScreenPublisherEnableAudio',\n  screenPublisherDisableVideo: 'ScreenPublisherDisableVideo',\n  screenPublisherDisableAudio: 'ScreenPublisherDisableAudio',\n  cameraSubscriberEnableVideo: 'CameraSubscriberEnableVideo',\n  cameraSubscriberEnableAudio: 'CameraSubscriberEnableAudio',\n  cameraSubscriberDisableVideo: 'CameraSubscriberDisableVideo',\n  cameraSubscriberDisableAudio: 'CameraSubscriberDisableAudio',\n  screenSubscriberEnableVideo: 'ScreenSubscriberEnableVideo',\n  screenSubscriberEnableAudio: 'ScreenSubscriberEnableAudio',\n  screenSubscriberDisableVideo: 'ScreenSubscriberDisableVideo',\n  screenSubscriberDisableAudio: 'ScreenSubscriberDisableAudio',\n  initPreviewPublisher: 'InitPreviewPublisher',\n  destroyPreviewPublisher: 'DestroyPreviewPublisher',\n  previewPublisherEnableVideo: 'PreviewPublisherEnableVideo',\n  previewPublisherEnableAudio: 'PreviewPublisherEnableAudio',\n  previewPublisherDisableVideo: 'PreviewPublisherDisableVideo',\n  previewPublisherDisableAudio: 'PreviewPublisherDisableAudio',\n  setVideoDevice: 'SetVideoDevice',\n  setAudioDevice: 'SetAudioDevice',\n  getAudioOutputDevices: 'GetAudioOutputDevices',\n  getActiveAudioOutputDevice: 'GetActiveAudioOutputDevice',\n  getVideoDevice: 'GetVideoDevice',\n  getAudioDevice: 'GetAudioDevice',\n  getDevices: 'GetDevices',\n  createCameraSubscriber: 'CreateCameraSubscriber',\n  createScreenSubscriber: 'CreateScreenSubscriber',\n  setProxyUrl: 'SetProxyUrl',\n  setAudioOutputDevice: 'SetAudioOutputDevice',\n  setVideoFilter: 'SetVideoFilter',\n  clearVideoFilter: 'ClearVideoFilter',\n} as const;\n\ntype AnalyticsProps = {\n  source?: string;\n  sessionId?: string;\n  connectionId?: string;\n  apiKey?: string;\n};\n\ntype AnalyticsOptions = {\n  proxyUrl?: string;\n};\n\ntype LogAction = typeof logAction[keyof typeof logAction];\ntype LogVariation = typeof logVariation[keyof typeof logVariation];\n\nconst defaultProps: AnalyticsProps = {\n  source: window.location.origin,\n};\n\nclass Analytics {\n  analytics: OTKAnalytics;\n\n  constructor(analyticsProps: AnalyticsProps = defaultProps) {\n    const {\n      source = window.location.origin,\n      sessionId,\n      connectionId,\n      apiKey,\n    } = analyticsProps;\n\n    const otkanalyticsData = {\n      clientVersion: process.env.CLIENT_VERSION || 'video-express-x.y.z',\n      source,\n      componentId: 'video-express',\n      name: 'video-express',\n      partnerId: apiKey,\n      sessionId,\n    };\n\n    const options: AnalyticsOptions = {};\n    const proxyUrl: string = ConfigStore.getProxyUrl();\n\n    // Make sure to proxy VE-specific logs too\n    if (proxyUrl) {\n      options.proxyUrl = proxyUrl;\n    }\n\n    this.analytics = new OTKAnalytics(otkanalyticsData, options);\n\n    if (sessionId && connectionId && apiKey) {\n      this.update(sessionId, connectionId, apiKey);\n    }\n  }\n\n  update = (\n    sessionId: string | undefined,\n    connectionId: string,\n    apiKey: string\n  ) => {\n    if (sessionId && connectionId && apiKey) {\n      const sessionInfo = {\n        sessionId,\n        connectionId,\n        partnerId: apiKey,\n      };\n      this.analytics.addSessionInfo(sessionInfo);\n    }\n  };\n\n  log = (action: LogAction, variation: LogVariation, payload?: any) => {\n    if (!process.env.ENABLE_LOGGING) {\n      return;\n    }\n    const data: {\n      action: LogAction;\n      variation: LogVariation;\n      payload?: any;\n    } = {\n      action,\n      variation,\n    };\n    if (payload) {\n      data.payload = payload;\n    }\n    this.analytics.logEvent(data);\n  };\n}\nexport { Analytics, logVariation, logAction };\n","const data =\n  '';\nconst smileIconDataURI = `data:image/png;base64,${data}`;\nexport default smileIconDataURI;\n","import {\n  Stream,\n  Subscriber as OTSubscriber,\n  Session,\n  OTError,\n} from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport Subscriber from '../internal/subscriber';\nimport { Analytics, logAction, logVariation } from '../analytics';\nimport { logger } from '../logging';\nimport iconSmileyFace from '../assets/icons/smile';\nimport { createStyles } from '../mp/styles';\n\nexport const classes = createStyles({\n  subscriberOnLoad: {\n    display: ['none', '!important'],\n  },\n});\n\ndeclare interface CameraSubscriber {\n  on(\n    event: 'audioLevelUpdated',\n    listener: (audioLevel: number, movingAvg: number) => void\n  ): this;\n  on(event: 'created', listener: () => void): this;\n  on(event: 'destroyed', listener: () => void): this;\n}\n\nclass CameraSubscriber extends EventEmitter {\n  // @ts-ignore @TODO: Verify whether _stream variable required for this class?\n  private _stream: Stream;\n  private movingAvg: number | null;\n  id: string;\n  setOptimalPreferredResolution: () => void;\n  getSubscriberElement: () => HTMLElement | undefined;\n  isVideoEnabled: () => boolean;\n  isAudioEnabled: () => boolean;\n  enableVideo: () => void;\n  disableVideo: () => void;\n  enableAudio: () => void;\n  disableAudio: () => void;\n  setDisabledImageURI: (imageURI: string) => void;\n\n  constructor(\n    stream: Stream,\n    otSubscriber: OTSubscriber,\n    analytics: Analytics\n  ) {\n    super();\n    this._stream = stream;\n    this.movingAvg = null;\n    const _subscriber = new Subscriber(otSubscriber);\n    this.id = _subscriber.id as string;\n\n    _subscriber.on('audioLevelUpdated', (audioLevel: number) => {\n      if (this.movingAvg === null || this.movingAvg <= audioLevel) {\n        this.movingAvg = audioLevel;\n      } else {\n        this.movingAvg = 0.7 * this.movingAvg + 0.3 * audioLevel;\n      }\n      // 1.5 scaling to map the -30 - 0 dBm range to [0,1]\n      let logLevel = Math.log(this.movingAvg) / Math.LN10 / 1.5 + 1;\n      logLevel = Math.min(Math.max(logLevel, 0), 1);\n      this.emit('audioLevelUpdated', audioLevel, logLevel);\n    });\n\n    _subscriber.on('destroyed', () => {\n      this.emit('destroyed');\n    });\n\n    _subscriber.on('videoElementCreated', () => {\n      this.emit('created');\n    });\n\n    this.setOptimalPreferredResolution = () => {\n      if (_subscriber) {\n        const { otSubscriber } = _subscriber;\n        const videoElementWidth = otSubscriber.element?.offsetWidth;\n        const videoElementHeight = otSubscriber.element?.offsetHeight;\n        if (videoElementWidth && videoElementHeight) {\n          const preferredResolution = {\n            width: videoElementWidth * window.devicePixelRatio,\n            height: videoElementHeight * window.devicePixelRatio,\n          };\n          otSubscriber.setPreferredResolution(preferredResolution);\n        }\n      }\n    };\n\n    this.getSubscriberElement = () => _subscriber?.getSubscriberElement();\n\n    this.isVideoEnabled = () => _subscriber?.isVideoEnabled();\n\n    this.isAudioEnabled = () => _subscriber?.isAudioEnabled();\n\n    this.enableVideo = () => {\n      analytics.log(\n        logAction.cameraSubscriberEnableVideo,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.enableVideo();\n        logger.debug('Enabled subscriber video: ', this.id);\n        analytics.log(\n          logAction.cameraSubscriberEnableVideo,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.cameraSubscriberEnableVideo,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.disableVideo = () => {\n      analytics.log(\n        logAction.cameraSubscriberDisableVideo,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.disableVideo();\n        logger.debug('Disabled subscriber video: ', this.id);\n        analytics.log(\n          logAction.cameraSubscriberDisableVideo,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.cameraSubscriberDisableVideo,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.enableAudio = () => {\n      analytics.log(\n        logAction.cameraSubscriberEnableAudio,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.enableAudio();\n        analytics.log(\n          logAction.cameraSubscriberEnableAudio,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.cameraSubscriberEnableAudio,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.disableAudio = () => {\n      analytics.log(\n        logAction.cameraSubscriberDisableAudio,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.disableAudio();\n        analytics.log(\n          logAction.cameraSubscriberDisableAudio,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.cameraSubscriberDisableAudio,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.setDisabledImageURI = (imageURI: string): void => {\n      _subscriber.setDisabledImageURI(imageURI);\n    };\n  }\n}\n\nexport default CameraSubscriber;\n\n/* We can't use a promise here because the videoElementCreated event may be fired between\n * calling resolve() and the success handler being executed. Instead we use a synchronous callback.\n */\nexport const createCameraSubscriber = (\n  session: Session,\n  stream: Stream,\n  shouldEnableVideo: boolean,\n  analytics: Analytics,\n  callback: (error?: OTError, cameraSubscriber?: CameraSubscriber) => void\n) => {\n  const _otSubscriber = session.subscribe(\n    stream,\n    'layoutContainer',\n    {\n      insertMode: 'append',\n      subscribeToVideo: shouldEnableVideo,\n      style: {\n        buttonDisplayMode: 'off',\n        nameDisplayMode: 'off',\n        videoDisabledDisplayMode: 'off',\n        backgroundImageURI: iconSmileyFace,\n      },\n    },\n    error => {\n      analytics.log(logAction.createCameraSubscriber, logVariation.attempt);\n      if (error) {\n        analytics.log(logAction.createCameraSubscriber, logVariation.failure, {\n          error,\n        });\n        callback(error);\n      } else {\n        const cameraSubscriber = new CameraSubscriber(\n          stream,\n          _otSubscriber,\n          analytics\n        );\n        callback(undefined, cameraSubscriber);\n        analytics.log(logAction.createCameraSubscriber, logVariation.success);\n      }\n    }\n  );\n  if (_otSubscriber.element instanceof HTMLElement) {\n    // hide loading subscriber videos until ready to be displayed by layout manager\n    _otSubscriber.element?.classList.add(classes.subscriberOnLoad);\n  }\n};\n","import { EventEmitter } from 'events';\nimport {\n  default as initLayout,\n  Options,\n  LayoutContainer,\n} from 'opentok-layout-js';\nimport ResizeObserverPolyfill from 'resize-observer-polyfill';\nimport { throttle, debounce } from 'lodash';\nimport { LayoutMode } from '../utils/types';\nimport { getTargetElementFromDOM, createDiv } from '../utils/dom';\nimport { createStyles } from './styles';\nimport { logger } from '../logging';\nimport HiddenTileTracker from '../internal/hidden-tile-tracker';\nimport { removeItem } from '../utils/array';\nimport { classes } from './camera-subscriber';\n\nconst LARGE_CLASS_NAME = 'OT_big';\nconst DEFAULT_MOBILE_PARTICIPANTS = 3;\nconst DEFAULT_DESKTOP_PARTICIPANTS = 25;\nconst ACTIVE_SPEAKER_HIGHLIGHT_CLASS = 'active_speaker_highlight';\nconst DEFAULT_ACTIVE_SPEAKER_COLOR = '#53CA6A';\n\ntype FixedOTLayoutJSOptions = Pick<\n  Options,\n  'animate' | 'bigClass' | 'window' | 'ignoreClass'\n>;\n\n// Omit exposing layout options that we need to control i.e. animation and class internals\ntype CustomizableOTLayoutJSOptions = Omit<\n  Options,\n  keyof FixedOTLayoutJSOptions\n>;\n\nconst defaultLayoutOptions: CustomizableOTLayoutJSOptions = {\n  fixedRatio: false,\n  alignItems: 'center',\n  bigPercentage: 0.8,\n  bigFixedRatio: false,\n  bigAlignItems: 'center',\n  smallAlignItems: 'center',\n  maxWidth: Infinity,\n  maxHeight: Infinity,\n  smallMaxWidth: Infinity,\n  smallMaxHeight: Infinity,\n  bigMaxWidth: Infinity,\n  bigMaxHeight: Infinity,\n  bigMaxRatio: 3 / 2,\n  bigMinRatio: 9 / 16,\n  bigFirst: true,\n};\n\nconst fixedLayoutOptions: FixedOTLayoutJSOptions = {\n  bigClass: LARGE_CLASS_NAME,\n  window,\n  animate: false,\n  ignoreClass: 'OT_ignore',\n};\n\nconst getClasses = (speakerHighlightColor?: string) => {\n  const outerMargin = 8;\n  const marginOffset = 2 * outerMargin; // i.e. marginTop + marginBottom or marginLeft + marginRight\n  return createStyles({\n    layoutContainer: {\n      margin: outerMargin,\n      width: `calc(100% - ${marginOffset}px)`,\n      height: `calc(100% - ${marginOffset}px)`,\n      position: 'relative',\n      '& > *': {\n        width: 0,\n        height: 0,\n        opacity: 0,\n      },\n      '& > .ot-layout': {\n        opacity: 1,\n      },\n      '& > .OT_publisher, & > .OT_subscriber': {\n        margin: 4,\n        borderRadius: 16,\n        // Fix for safari border radius https://stackoverflow.com/a/16681137/5433407\n        '-webkit-backface-visibility': 'hidden',\n        '-webkit-transform': 'translate3d(0, 0, 0)',\n      },\n      '& > .OT_subscriber.MP_screenshare_subscriber': {\n        borderRadius: 0,\n      },\n      [`& > .OT_subscriber.${ACTIVE_SPEAKER_HIGHLIGHT_CLASS}`]: {\n        borderColor: `${speakerHighlightColor || DEFAULT_ACTIVE_SPEAKER_COLOR}`,\n        borderWidth: `3px`,\n        borderStyle: `solid`,\n      },\n    },\n    layoutContainerWrapper: {\n      width: '100%',\n      height: '100%',\n      overflow: 'auto',\n    },\n  });\n};\n\nexport type LayoutOptions = {\n  layoutMode?: LayoutMode;\n  speakerHighlightEnabled?: boolean;\n  speakerHighlightColor?: string;\n  cameraPublisherContainer?: HTMLElement | string;\n  screenPublisherContainer?: HTMLElement | string;\n  isMobileLayout: boolean;\n};\n\ndeclare interface LayoutManager {\n  on(event: 'layoutComplete', listener: () => void): this;\n  on(\n    event: 'cameraSubscriberHidden',\n    listener: (subscriberId: string) => void\n  ): this;\n  on(\n    event: 'cameraSubscriberDisplayed',\n    listener: (subscriberId: string) => void\n  ): this;\n}\n\nclass LayoutManager extends EventEmitter {\n  _layoutContainer: LayoutContainer;\n  _layoutContainerElement: HTMLElement;\n  _activeSpeakerElement?: HTMLElement;\n  _screenSharingElementIds: Array<string> = [];\n  _cameraSubscriberElementIds: Array<string> = [];\n  _layoutMode: LayoutMode = 'grid';\n  isViewingScreenshare: boolean = false;\n  _emitLayoutRecalculated: () => void;\n  _isMobileLayout: boolean;\n  _hiddenTileTracker: HiddenTileTracker;\n  _speakerHighlightColor?: string;\n  _speakerHighlightEnabled?: boolean;\n\n  constructor(\n    targetElement: HTMLElement | string,\n    layoutOptions: LayoutOptions,\n    maxVideoParticipantsOnScreen?: Number\n  ) {\n    super();\n    const { layoutMode = 'grid', ...customOTLayoutJsOptions } = layoutOptions;\n    this._layoutMode = layoutMode;\n    this._isMobileLayout = layoutOptions.isMobileLayout;\n\n    this._speakerHighlightColor = layoutOptions.speakerHighlightColor;\n    this._speakerHighlightEnabled = layoutOptions.speakerHighlightEnabled;\n\n    if (this._speakerHighlightColor && !this._speakerHighlightEnabled) {\n      logger.warn(\n        'You passed speakerHighlightColor value without setting speakerHighlightEnabled'\n      );\n    }\n\n    const maxRatio = this._isMobileLayout ? 16 / 9 : 14 / 16;\n    const minRatio = this._isMobileLayout ? 3 / 2 : 9 / 16;\n\n    defaultLayoutOptions.maxRatio = maxRatio;\n    defaultLayoutOptions.minRatio = minRatio;\n\n    this._layoutContainerElement = this._initLayoutContainerElement(\n      targetElement\n    );\n    this._emitLayoutRecalculated = debounce(() => {\n      this.emit('layoutComplete');\n    }, 20); // wait for CSS transition to finish before sending event. If no transition (0) then add small delay anyway\n\n    this._layoutContainer = initLayout(this._layoutContainerElement, {\n      ...defaultLayoutOptions,\n      ...customOTLayoutJsOptions, // Overwrite default layout options with users custom options\n      ...fixedLayoutOptions, // Fixed layout options last to ensure not overwritten by user\n    });\n\n    this._initContainerResizeListener();\n\n    // Max onscreen video participants: default or user-specified parameter depending on mobile/desktop layout\n    if (this._isMobileLayout) {\n      this._hiddenTileTracker = new HiddenTileTracker(\n        DEFAULT_MOBILE_PARTICIPANTS\n      );\n    } else {\n      this._hiddenTileTracker = new HiddenTileTracker(\n        maxVideoParticipantsOnScreen || DEFAULT_DESKTOP_PARTICIPANTS\n      );\n    }\n  }\n\n  _initLayoutContainerElement = (\n    roomContainerElement: HTMLElement | string\n  ) => {\n    let roomContainer: HTMLElement = getTargetElementFromDOM(\n      roomContainerElement\n    );\n\n    const layoutContainerElement = createDiv('layoutContainer');\n    const layoutContainerWrapperElement = createDiv('layoutContainerWrapper');\n\n    const classes = getClasses(this._speakerHighlightColor);\n    layoutContainerElement.classList.add(classes.layoutContainer);\n    layoutContainerWrapperElement.classList.add(classes.layoutContainerWrapper);\n\n    layoutContainerWrapperElement.appendChild(layoutContainerElement);\n    roomContainer.appendChild(layoutContainerWrapperElement);\n\n    return layoutContainerElement;\n  };\n\n  _initContainerResizeListener = () => {\n    const throttledRecalculateLayout = throttle(\n      () => this._recalculateTileSizes(),\n      20\n    );\n    const resizeObserver = new ResizeObserverPolyfill(() => {\n      throttledRecalculateLayout();\n    });\n    resizeObserver.observe(this._layoutContainerElement);\n  };\n\n  setLayoutMode = (layoutMode: LayoutMode) => {\n    this._layoutMode = layoutMode;\n    this.updateLayout();\n  };\n\n  _setElementBig = (element: HTMLElement) => {\n    element.classList.add(LARGE_CLASS_NAME);\n  };\n\n  _setElementSmall = (element: HTMLElement) => {\n    element.classList.remove(LARGE_CLASS_NAME);\n  };\n\n  _hideElement = (element: HTMLElement) => {\n    const currentStyle = getComputedStyle(element);\n    if (currentStyle.display !== 'none') {\n      element.style.display = 'none';\n      if (this._cameraSubscriberElementIds.includes(element.id)) {\n        this.emit('cameraSubscriberHidden', element.id);\n      }\n    }\n  };\n\n  _displayElement = (element: HTMLElement) => {\n    const currentStyle = getComputedStyle(element);\n    if (currentStyle.display !== 'block') {\n      element.style.display = 'block';\n      if (this._cameraSubscriberElementIds.includes(element.id)) {\n        this.emit('cameraSubscriberDisplayed', element.id);\n      }\n    }\n  };\n\n  _removeSubscriberOnLoad = (element: HTMLElement) => {\n    element.classList.remove(classes.subscriberOnLoad);\n  };\n\n  _setAllElementsSmall = () => {\n    this._layoutContainerElement.childNodes.forEach(node => {\n      if (node instanceof HTMLElement) {\n        this._setElementSmall(node);\n      }\n    });\n  };\n\n  _setOnlyScreenElementsBig = () => {\n    this._layoutContainerElement.childNodes.forEach(node => {\n      if (!(node instanceof HTMLElement)) {\n        return;\n      }\n      if (!this._screenSharingElementIds.includes(node.id)) {\n        this._setElementSmall(node);\n      } else {\n        this._setElementBig(node);\n      }\n    });\n  };\n\n  _setOnlyActiveSpeakerElementBig = () => {\n    const elementToSetBig = this._getActiveSpeakerViewLargeElement();\n    this._setAllElementsSmall();\n\n    if (elementToSetBig) {\n      this._setElementBig(elementToSetBig);\n    }\n  };\n\n  _getActiveSpeakerViewLargeElement = (): HTMLElement | undefined => {\n    if (this._activeSpeakerElement) {\n      return this._activeSpeakerElement;\n    }\n    const subscriber = this._layoutContainerElement.querySelector(\n      '.OT_subscriber'\n    );\n    if (subscriber) {\n      return subscriber as HTMLElement;\n    }\n    const publisher = this._layoutContainerElement.querySelector(\n      '.OT_publisher'\n    );\n    if (publisher) {\n      return publisher as HTMLElement;\n    }\n    logger.error(\n      'No publisher or subscriber elements found when setting active speaker layout'\n    );\n    return;\n  };\n\n  _displayOnlyScreenElement = () => {\n    this._layoutContainerElement.childNodes.forEach(node => {\n      if (!(node instanceof HTMLElement)) {\n        return;\n      }\n      if (!this._screenSharingElementIds.includes(node.id)) {\n        this._hideElement(node);\n      } else {\n        this._setElementBig(node);\n      }\n    });\n  };\n\n  _displayOnlyActiveSpeaker = () => {\n    const elementToSetBig = this._getActiveSpeakerViewLargeElement();\n    this._layoutContainerElement.childNodes.forEach(node => {\n      if (!(node instanceof HTMLElement)) {\n        return;\n      } else if (node !== elementToSetBig) {\n        this._hideElement(node);\n      } else {\n        this._displayElement(node);\n      }\n    });\n  };\n\n  _displayLimitedGridElements = () => {\n    this._layoutContainerElement.childNodes.forEach(node => {\n      if (!(node instanceof HTMLElement)) {\n        return;\n      } else if (this._hiddenTileTracker?.hiddenElements.includes(node)) {\n        this._hideElement(node);\n      } else {\n        this._displayElement(node);\n      }\n    });\n  };\n\n  onActiveSpeakerChanged({\n    newActiveSpeakerElement,\n    previousActiveSpeakerElement,\n  }: {\n    newActiveSpeakerElement?: HTMLElement;\n    previousActiveSpeakerElement?: HTMLElement;\n  }) {\n    this._activeSpeakerElement = newActiveSpeakerElement;\n\n    // new active speaker detected, highight them and remove the previous one\n    if (this._speakerHighlightEnabled) {\n      if (previousActiveSpeakerElement) {\n        previousActiveSpeakerElement.classList.remove(\n          ACTIVE_SPEAKER_HIGHLIGHT_CLASS\n        );\n      }\n\n      if (newActiveSpeakerElement) {\n        newActiveSpeakerElement.classList.add(ACTIVE_SPEAKER_HIGHLIGHT_CLASS);\n      }\n    }\n\n    this._hiddenTileTracker?.onActiveSpeakerChanged(newActiveSpeakerElement);\n    this.updateLayout();\n  }\n\n  onActiveSpeakerStatusChanged({ isSpeaking }: { isSpeaking: boolean }) {\n    if (this._speakerHighlightEnabled) {\n      const addOrRemoveClass = isSpeaking ? 'add' : 'remove';\n      this._activeSpeakerElement?.classList[addOrRemoveClass](\n        ACTIVE_SPEAKER_HIGHLIGHT_CLASS\n      );\n    }\n  }\n\n  _recalculateTileSizes() {\n    this._layoutContainer.layout();\n    this._emitLayoutRecalculated();\n  }\n\n  _isSubscribingToScreen = () => this._screenSharingElementIds.length > 0;\n\n  onScreenSubscriberCreated = (subscriberId?: string) => {\n    if (subscriberId) {\n      this._screenSharingElementIds.push(subscriberId);\n      this.isViewingScreenshare = true;\n    }\n    this.updateLayout();\n  };\n\n  onScreenSubscriberDestroyed = (subscriberId?: string) => {\n    if (subscriberId) {\n      removeItem(this._screenSharingElementIds, subscriberId);\n    }\n    if (this._screenSharingElementIds.length === 0) {\n      this.isViewingScreenshare = false;\n    }\n    this.updateLayout();\n  };\n\n  onCameraSubscriberCreated = (element: HTMLElement | undefined) => {\n    if (element) {\n      this._hiddenTileTracker?.onSubscriberCreated(element);\n      this._cameraSubscriberElementIds.push(element.id);\n      this.emit('cameraSubscriberDisplayed', element.id);\n    }\n    this.updateLayout();\n  };\n\n  onCameraSubscriberDestroyed = (element: HTMLElement | undefined) => {\n    if (element) {\n      this._hiddenTileTracker?.onSubscriberRemoved(element);\n      removeItem(this._cameraSubscriberElementIds, element.id);\n    }\n    this.updateLayout();\n  };\n\n  getLayoutContainerElement() {\n    return this._layoutContainerElement;\n  }\n\n  updateLayout() {\n    if (this._isMobileLayout) {\n      if (this.isViewingScreenshare) {\n        this._displayOnlyScreenElement();\n      } else if (this._layoutMode === 'active-speaker') {\n        this._displayOnlyActiveSpeaker();\n      } else {\n        this._displayLimitedGridElements();\n      }\n    } else {\n      if (this.isViewingScreenshare) {\n        this._setOnlyScreenElementsBig();\n      } else if (this._layoutMode === 'active-speaker') {\n        this._setOnlyActiveSpeakerElementBig();\n      } else {\n        this._setAllElementsSmall();\n      }\n      this._displayLimitedGridElements();\n    }\n    this._recalculateTileSizes();\n  }\n}\n\nexport default LayoutManager;\n","import OT from '@opentok/client';\n\nimport { Device } from '../types/device';\nimport { Analytics, logAction, logVariation } from '../analytics';\nconst analytics = new Analytics();\n\nconst getDevices = (): Promise<Device[] | undefined> => {\n  return new Promise((resolve, reject) => {\n    analytics.log(logAction.getDevices, logVariation.attempt);\n    OT.getDevices((error, devices) => {\n      if (error) {\n        analytics.log(logAction.getDevices, logVariation.failure, { error });\n        reject(error);\n      }\n      analytics.log(logAction.getDevices, logVariation.success);\n      resolve(devices);\n    });\n  });\n};\nexport default getDevices;\n","import getDevices from './get-devices';\n\nconst getDeviceIdFromSettings = (track: MediaStreamTrack): string | undefined =>\n  track.getSettings ? track.getSettings().deviceId : '';\n\nconst getDeviceIdFromDevicesList = async (\n  track: MediaStreamTrack\n): Promise<string | null> => {\n  let devices;\n  let deviceId = null;\n  try {\n    devices = await getDevices();\n    if (devices && devices.length) {\n      const currentDevice = devices.find(\n        device => device.label === track.label\n      );\n      if (currentDevice) {\n        deviceId = currentDevice.deviceId;\n      }\n    }\n  } catch (e) {\n    // Don't need to throw. Instead, we'll just return null;\n  }\n  return deviceId;\n};\n\nconst getDeviceId = async (track: MediaStreamTrack): Promise<string> =>\n  getDeviceIdFromSettings(track) ||\n  (await getDeviceIdFromDevicesList(track)) ||\n  '';\n\nexport default getDeviceId;\n","import OT, { Device } from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport { throttle } from 'lodash';\nimport { logger } from '../logging';\nimport getDeviceId from '../mp/get-device-id';\nimport { VideoOverlay, createPublisherOverlay } from './video-overlay/overlay';\nimport iconSmileyFace from '../assets/icons/smile';\nimport { VideoFilter } from '../utils/types';\n\nconst _attachEventsToOTPublisher = (\n  self: Publisher,\n  publisher: OT.Publisher\n): void => {\n  const _onAudioLevelUpdated = (event: { audioLevel: number }) => {\n    self.emit('audioLevelUpdated', event.audioLevel);\n  };\n\n  const audioLevelUpdatedHandler = throttle(_onAudioLevelUpdated, 60, {\n    // So we don't send events after stream is destroyed\n    leading: true,\n    trailing: false,\n  });\n\n  publisher.on('destroyed', () => self.onDestroyed());\n\n  publisher.on('videoElementCreated', self._onVideoElementCreated);\n\n  if (self.source === 'camera') {\n    // audioLevelUpdated event will throw an exception for screen publisher,\n    // if the screen being published is not a chrome tab with \"share audio\" selected\n    // @TODO: Need to add checks for this scenario here\n    publisher.on('audioLevelUpdated', audioLevelUpdatedHandler);\n\n    publisher.on('accessAllowed', () => {\n      self.emit('accessAllowed');\n    });\n\n    publisher.on('accessDenied', () => {\n      self.emit('accessDenied');\n    });\n\n    publisher.on('accessDialogOpened', () => {\n      self.emit('accessDialogOpened');\n    });\n\n    publisher.on('accessDialogClosed', reason => {\n      self.emit('accessDialogClosed', reason);\n    });\n  }\n};\n\nconst _initPublisherForCamera = (\n  targetElement: HTMLElement | string | undefined,\n  options: OT.PublisherProperties | undefined,\n  publisher: Publisher\n): Promise<OT.Publisher> =>\n  new Promise((resolve, reject) => {\n    const _otPublisher = OT.initPublisher(\n      targetElement,\n      {\n        ...options,\n        insertMode: 'append',\n        style: {\n          buttonDisplayMode: 'off',\n          nameDisplayMode: 'off',\n          backgroundImageURI:\n            options?.style?.backgroundImageURI || iconSmileyFace,\n        },\n      },\n      error => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(_otPublisher);\n        }\n      }\n    );\n    // We must attach events here. Doing so in callback or after resolving is too late\n    if (_otPublisher) {\n      publisher.otPublisher = _otPublisher;\n      _attachEventsToOTPublisher(publisher, _otPublisher);\n    }\n  });\n\nconst _initPublisherForScreen = (\n  targetElement: HTMLElement | string | undefined,\n  options: OT.PublisherProperties | undefined,\n  publisher: Publisher\n): Promise<OT.Publisher> =>\n  new Promise((resolve, reject) => {\n    OT.checkScreenSharingCapability(response => {\n      if (!response.supported || response.extensionRegistered === false) {\n        reject('Screen sharing not supported for this browser');\n      } else {\n        const _otPublisher = OT.initPublisher(\n          targetElement,\n          {\n            videoSource: 'screen',\n            insertMode: 'append',\n            showControls: false,\n            videoContentHint: 'detail',\n            ...options,\n          },\n          error => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(_otPublisher);\n            }\n          }\n        );\n        // We must attach events here. Doing so in callback or after resolving is too late\n        _attachEventsToOTPublisher(publisher, _otPublisher);\n      }\n    });\n  });\n\ndeclare interface Publisher {\n  on(event: 'audioLevelUpdated', listener: (audioLevel: number) => void): this;\n  on(event: 'videoElementCreated', listener: () => void): this;\n  on(event: 'destroyed', listener: () => void): this;\n  on(event: 'accessAllowed', listener: () => void): this;\n  on(event: 'accessDenied', listener: () => void): this;\n  on(event: 'accessDialogOpened', listener: () => void): this;\n  on(event: 'accessDialogClosed', listener: (reason: string) => void): this;\n}\n\nclass Publisher extends EventEmitter {\n  otPublisher?: OT.Publisher;\n  source: string;\n  name?: string;\n  _otPublisherPromise?: Promise<OT.Publisher>;\n  overlay: VideoOverlay | undefined;\n\n  constructor(source: string = 'camera', name?: string) {\n    super();\n    this.source = source;\n    this.name = name;\n  }\n\n  initOTPublisher = async (\n    targetElement?: HTMLElement | string,\n    publisherOptions?: OT.PublisherProperties\n  ): Promise<OT.Publisher> => {\n    if (!this._otPublisherPromise) {\n      let initPublisher = _initPublisherForCamera;\n      if (this.source === 'screen') {\n        initPublisher = _initPublisherForScreen;\n      }\n      this._otPublisherPromise = initPublisher(\n        targetElement,\n        publisherOptions,\n        this\n      );\n      let otPublisher: OT.Publisher;\n      try {\n        otPublisher = await this._otPublisherPromise;\n      } catch (e) {\n        this._otPublisherPromise = undefined;\n        throw e;\n      }\n      this.otPublisher = otPublisher;\n    }\n    return await this._otPublisherPromise;\n  };\n\n  getOTPublisher = (): Promise<OT.Publisher> | undefined =>\n    this._otPublisherPromise;\n\n  onDestroyed = () => {\n    logger.debug('Publisher destroyed');\n    this._otPublisherPromise = undefined;\n    this.emit('destroyed');\n  };\n\n  _onVideoElementCreated = () => {\n    if (this.source === 'camera') {\n      const divId = this.otPublisher?.id;\n      if (divId) {\n        this.overlay = createPublisherOverlay({\n          id: divId,\n          isAudioEnabled: this.isAudioEnabled(),\n          participantName: this.name,\n        });\n        this.overlay?.on('toggleAudioClicked', () => {\n          this._toggleAudioEnabled();\n        });\n      } else {\n        logger.warn(\n          'Could not find stream id when trying to create camera publisher overlay'\n        );\n      }\n    }\n    this.emit('videoElementCreated');\n  };\n\n  _toggleAudioEnabled = () => {\n    if (this.isAudioEnabled()) {\n      this.disableAudio();\n    } else {\n      this.enableAudio();\n    }\n  };\n  isVideoEnabled = (): boolean => !!this.otPublisher?.getVideoSource()?.track;\n\n  isAudioEnabled = (): boolean => !!this.otPublisher?.getAudioSource()?.enabled;\n\n  enableVideo = (): void => this.otPublisher?.publishVideo(true);\n\n  disableVideo = (): void => this.otPublisher?.publishVideo(false);\n\n  enableAudio = (): void => {\n    this.otPublisher?.publishAudio(true);\n    this.overlay?.setAudioEnabled();\n  };\n\n  disableAudio = (): void => {\n    this.otPublisher?.publishAudio(false);\n    this.overlay?.setAudioDisabled();\n  };\n\n  getVideoDevice = (): Device => {\n    const videoDevice: Device = { deviceId: '', label: '', kind: 'videoInput' };\n    if (this.otPublisher) {\n      const { deviceId, track } = this.otPublisher.getVideoSource();\n      videoDevice.deviceId = deviceId || '';\n      videoDevice.label = track?.label || '';\n    }\n    return videoDevice;\n  };\n\n  setVideoDevice = async (videoDeviceId: string): Promise<void> =>\n    await this.otPublisher?.setVideoSource(videoDeviceId);\n\n  getAudioDevice = async (): Promise<Device> => {\n    const track = this.otPublisher?.getAudioSource();\n    const deviceId = track ? await getDeviceId(track) : '';\n    return {\n      deviceId,\n      label: track?.label || '',\n      kind: 'audioInput',\n    };\n  };\n\n  setAudioDevice = async (audioDeviceId: string): Promise<void> =>\n    await this.otPublisher?.setAudioSource(audioDeviceId);\n\n  destroyOTPublisher = (): void => this.otPublisher?.destroy();\n\n  setVideoFilter = async (videoFilter: VideoFilter): Promise<void> =>\n    await this.otPublisher?.applyVideoFilter(videoFilter);\n\n  clearVideoFilter = async (): Promise<void> =>\n    await this.otPublisher?.clearVideoFilter();\n\n  setDisabledImageURI = (imageURI: string): void => {\n    this.otPublisher?.setStyle('backgroundImageURI', imageURI);\n  };\n}\n\nexport default Publisher;\n","import OT, { Device } from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport Publisher from '../internal/publisher';\nimport { Analytics, logAction, logVariation } from '../analytics';\nimport { logger } from '../logging';\nimport { VideoFilter } from '../utils/types';\n\ndeclare interface CameraPublisher {\n  on(event: 'audioLevelUpdated', listener: (audioLevel: number) => void): this;\n  on(event: 'created', listener: (reason: string) => void): this;\n  on(event: 'destroyed', listener: () => void): this;\n  on(event: 'accessAllowed', listener: () => void): this;\n  on(event: 'accessDenied', listener: () => void): this;\n  on(event: 'accessDialogOpened', listener: () => void): this;\n  on(event: 'accessDialogClosed', listener: (reason: string) => void): this;\n}\n\nclass CameraPublisher extends EventEmitter {\n  private _defaultTargetElement: HTMLElement;\n  private _cameraPub?: OT.Publisher;\n\n  isVideoEnabled: () => boolean;\n  isAudioEnabled: () => boolean;\n  enableVideo: () => void;\n  disableVideo: () => void;\n  enableAudio: () => void;\n  disableAudio: () => void;\n  getVideoDevice: () => Device;\n  setVideoDevice: (deviceId: string) => Promise<void>;\n  getAudioDevice: () => Promise<Device>;\n  setAudioDevice: (deviceId: string) => Promise<void>;\n  destroyCameraPublisher: () => void;\n  initPublisher: (publisherOptions?: {\n    targetElement?: HTMLElement | string;\n    publisherProperties?: OT.PublisherProperties;\n  }) => Promise<void>;\n  setVideoFilter: (videoFilter: VideoFilter) => Promise<void>;\n  clearVideoFilter: () => Promise<void>;\n  publish: () => Promise<void>;\n  setDisabledImageURI: (imageURI: string) => void;\n\n  constructor(\n    session: OT.Session,\n    defaultTargetElement: HTMLElement,\n    analytics: Analytics,\n    name: string\n  ) {\n    super();\n    this._defaultTargetElement = defaultTargetElement;\n\n    const _publisher = new Publisher('camera', name);\n\n    const _attachEventsToCameraPublisher = (): void => {\n      _publisher.on('audioLevelUpdated', (audioLevel: number) => {\n        this.emit('audioLevelUpdated', audioLevel);\n      });\n\n      _publisher.on('videoElementCreated', () => this.emit('created'));\n\n      _publisher.on('destroyed', () => this.emit('destroyed'));\n\n      _publisher.on('accessAllowed', () => {\n        this.emit('accessAllowed');\n      });\n\n      _publisher.on('accessDenied', () => {\n        this.emit('accessDenied');\n      });\n\n      _publisher.on('accessDialogOpened', () => {\n        this.emit('accessDialogOpened');\n      });\n\n      _publisher.on('accessDialogClosed', (reason: string) => {\n        this.emit('accessDialogClosed', reason);\n      });\n    };\n\n    this.isVideoEnabled = (): boolean => _publisher.isVideoEnabled();\n\n    this.isAudioEnabled = (): boolean => _publisher.isAudioEnabled();\n\n    this.enableVideo = (): void => {\n      analytics.log(logAction.cameraPublisherEnableVideo, logVariation.attempt);\n      _publisher.enableVideo();\n      analytics.log(logAction.cameraPublisherEnableVideo, logVariation.success);\n    };\n\n    this.disableVideo = (): void => {\n      analytics.log(\n        logAction.cameraPublisherDisableVideo,\n        logVariation.attempt\n      );\n      _publisher.disableVideo();\n      analytics.log(\n        logAction.cameraPublisherDisableVideo,\n        logVariation.success\n      );\n    };\n\n    this.enableAudio = (): void => {\n      analytics.log(logAction.cameraPublisherEnableAudio, logVariation.attempt);\n      _publisher.enableAudio();\n      analytics.log(logAction.cameraPublisherEnableAudio, logVariation.success);\n    };\n\n    this.disableAudio = (): void => {\n      analytics.log(\n        logAction.cameraPublisherDisableAudio,\n        logVariation.attempt\n      );\n      _publisher.disableAudio();\n      analytics.log(\n        logAction.cameraPublisherDisableAudio,\n        logVariation.success\n      );\n    };\n\n    this.getVideoDevice = (): Device => {\n      analytics.log(logAction.getVideoDevice, logVariation.attempt);\n      const videoDevice = _publisher.getVideoDevice();\n      analytics.log(logAction.getVideoDevice, logVariation.success);\n      return videoDevice;\n    };\n\n    this.setVideoDevice = async (deviceId: string): Promise<void> => {\n      analytics.log(logAction.setVideoDevice, logVariation.attempt);\n      try {\n        await _publisher.setVideoDevice(deviceId);\n        analytics.log(logAction.setVideoDevice, logVariation.success);\n      } catch (error) {\n        analytics.log(logAction.setVideoDevice, logVariation.failure, {\n          error,\n        });\n        throw error;\n      }\n    };\n\n    this.getAudioDevice = async (): Promise<Device> => {\n      analytics.log(logAction.getAudioDevice, logVariation.attempt);\n      const audioDevice = await _publisher.getAudioDevice();\n      analytics.log(logAction.getAudioDevice, logVariation.success);\n      return audioDevice;\n    };\n\n    this.setAudioDevice = async (deviceId: string): Promise<void> => {\n      analytics.log(logAction.setAudioDevice, logVariation.attempt);\n      try {\n        await _publisher.setAudioDevice(deviceId);\n        analytics.log(logAction.setAudioDevice, logVariation.success);\n      } catch (error) {\n        analytics.log(logAction.setAudioDevice, logVariation.failure, {\n          error,\n        });\n        throw error;\n      }\n    };\n\n    this.destroyCameraPublisher = (): void => {\n      try {\n        analytics.log(logAction.destroyCameraPublisher, logVariation.attempt);\n        _publisher.destroyOTPublisher();\n        analytics.log(logAction.destroyCameraPublisher, logVariation.success);\n      } catch (err) {\n        analytics.log(logAction.destroyCameraPublisher, logVariation.failure);\n      }\n    };\n\n    this.initPublisher = async (\n      publisherOptions: {\n        targetElement?: HTMLElement | string;\n        publisherProperties?: OT.PublisherProperties;\n      } = {}\n    ): Promise<void> => {\n      const { targetElement, publisherProperties } = publisherOptions;\n      const target = targetElement ?? this._defaultTargetElement;\n\n      _attachEventsToCameraPublisher();\n\n      await _publisher.initOTPublisher(target, publisherProperties);\n    };\n\n    this.publish = async (\n      publisherOptions: {\n        targetElement?: HTMLElement | string;\n        publisherProperties?: OT.PublisherProperties;\n      } = {}\n    ): Promise<void> => {\n      analytics.log(logAction.publishCameraPublisher, logVariation.attempt, {\n        publisherOptions,\n      });\n      const otPublisher = await _publisher.getOTPublisher();\n      if (!otPublisher) {\n        throw new Error('OT Publisher not initialized');\n      }\n\n      return new Promise<void>((resolve, reject) => {\n        session.publish(otPublisher, error => {\n          if (error) {\n            logger.error('Failed to publisher', error);\n            analytics.log(\n              logAction.publishCameraPublisher,\n              logVariation.failure,\n              {\n                error,\n              }\n            );\n            reject(error);\n          } else {\n            logger.info('Published camera to session');\n            analytics.log(\n              logAction.publishCameraPublisher,\n              logVariation.success\n            );\n            resolve();\n          }\n        });\n      });\n    };\n\n    this.setVideoFilter = async (videoFilter: VideoFilter) => {\n      try {\n        analytics.log(logAction.setVideoFilter, logVariation.attempt);\n        await _publisher.setVideoFilter(videoFilter);\n        analytics.log(logAction.setVideoFilter, logVariation.success);\n      } catch (error) {\n        analytics.log(logAction.setVideoFilter, logVariation.failure, {\n          error,\n        });\n        throw error;\n      }\n    };\n\n    this.clearVideoFilter = async () => {\n      analytics.log(logAction.clearVideoFilter, logVariation.attempt);\n      try {\n        await _publisher.clearVideoFilter();\n        analytics.log(logAction.clearVideoFilter, logVariation.success);\n      } catch (error) {\n        analytics.log(logAction.clearVideoFilter, logVariation.failure, {\n          error,\n        });\n        throw error;\n      }\n    };\n\n    this.setDisabledImageURI = (imageURI: string): void => {\n      _publisher.setDisabledImageURI(imageURI);\n    };\n  }\n}\n\nexport default CameraPublisher;\n","import { Session } from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport Publisher from '../internal/publisher';\nimport { Analytics, logAction, logVariation } from '../analytics';\n\ndeclare interface ScreenPublisher {\n  on(event: 'audioLevelUpdated', listener: (audioLevel: number) => void): this;\n  on(event: 'started', listener: () => void): this;\n  on(event: 'stopped', listener: () => void): this;\n}\n\nconst NOT_SCREEN_SHARING_ERROR = 'Client is not screen sharing';\n\nclass ScreenPublisher extends EventEmitter {\n  private _defaultTargetElement: HTMLElement;\n  isScreenSharing: Boolean = false;\n\n  start: (targetElement?: HTMLElement | string) => Promise<void>;\n  stop: () => void;\n  isVideoEnabled: () => boolean;\n  isAudioEnabled: () => boolean;\n  enableVideo: () => void;\n  disableVideo: () => void;\n  enableAudio: () => void;\n  disableAudio: () => void;\n  setDisabledImageURI: (imageURI: string) => void;\n\n  constructor(\n    session: Session,\n    targetElement: HTMLElement,\n    analytics: Analytics\n  ) {\n    super();\n\n    this._defaultTargetElement = targetElement;\n    let _publisher = new Publisher('screen');\n\n    const _attachEventsToScreenPublisher = async (): Promise<void> => {\n      _publisher.on('audioLevelUpdated', (audioLevel: number) => {\n        this.emit('audioLevelUpdated', audioLevel);\n      });\n\n      _publisher.on('videoElementCreated', () => this.emit('started'));\n\n      _publisher.on('destroyed', () => this.emit('stopped'));\n    };\n\n    this.start = async (\n      targetElement?: HTMLElement | string\n    ): Promise<void> => {\n      if (!_publisher) {\n        _publisher = new Publisher('screen');\n      }\n\n      const target = targetElement ?? this._defaultTargetElement;\n\n      _attachEventsToScreenPublisher();\n\n      const screenPub = await _publisher.initOTPublisher(target, {\n        showControls: true,\n        style: {\n          buttonDisplayMode: 'off',\n        },\n      });\n\n      screenPub?.element?.classList.add('OT_screenshare');\n      this.isScreenSharing = true;\n      return new Promise<void>((resolve, reject) => {\n        session.publish(screenPub, error => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    };\n\n    this.stop = (): void => {\n      _publisher?.destroyOTPublisher();\n      // @ts-ignore\n      _publisher = undefined;\n      this.isScreenSharing = false;\n    };\n\n    this.isVideoEnabled = (): boolean =>\n      this.isScreenSharing && _publisher?.isVideoEnabled();\n\n    this.isAudioEnabled = (): boolean =>\n      this.isScreenSharing && _publisher?.isAudioEnabled();\n\n    this.enableVideo = (): void => {\n      analytics.log(logAction.screenPublisherEnableVideo, logVariation.attempt);\n      if (this.isScreenSharing) {\n        _publisher?.enableVideo();\n        analytics.log(\n          logAction.screenPublisherEnableVideo,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenPublisherEnableVideo,\n          logVariation.failure,\n          {\n            error: NOT_SCREEN_SHARING_ERROR,\n          }\n        );\n      }\n    };\n\n    this.disableVideo = (): void => {\n      analytics.log(\n        logAction.screenPublisherDisableVideo,\n        logVariation.attempt\n      );\n      if (this.isScreenSharing) {\n        _publisher?.disableVideo();\n        analytics.log(\n          logAction.screenPublisherDisableVideo,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenPublisherDisableVideo,\n          logVariation.failure,\n          {\n            error: NOT_SCREEN_SHARING_ERROR,\n          }\n        );\n      }\n    };\n\n    this.enableAudio = (): void => {\n      analytics.log(logAction.screenPublisherEnableAudio, logVariation.attempt);\n      if (this.isScreenSharing) {\n        _publisher?.enableAudio();\n        analytics.log(\n          logAction.screenPublisherEnableAudio,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenPublisherEnableAudio,\n          logVariation.failure,\n          {\n            error: NOT_SCREEN_SHARING_ERROR,\n          }\n        );\n      }\n    };\n\n    this.disableAudio = (): void => {\n      analytics.log(\n        logAction.screenPublisherDisableAudio,\n        logVariation.attempt\n      );\n      if (this.isScreenSharing) {\n        _publisher?.disableAudio();\n        analytics.log(\n          logAction.screenPublisherDisableAudio,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenPublisherDisableAudio,\n          logVariation.failure,\n          {\n            error: NOT_SCREEN_SHARING_ERROR,\n          }\n        );\n      }\n    };\n\n    this.setDisabledImageURI = (imageURI: string): void => {\n      _publisher.setDisabledImageURI(imageURI);\n    };\n  }\n}\n\nexport default ScreenPublisher;\n","import {\n  Stream,\n  Subscriber as OTSubscriber,\n  Session,\n  OTError,\n} from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport Subscriber from '../internal/subscriber';\nimport { Analytics, logAction, logVariation } from '../analytics';\n\ndeclare interface ScreenSubscriber {\n  on(event: 'audioLevelUpdated', listener: (audioLevel: number) => void): this;\n  on(event: 'created', listener: () => void): this;\n  on(event: 'destroyed', listener: () => void): this;\n}\n\nclass ScreenSubscriber extends EventEmitter {\n  // @ts-ignore @TODO: Verify whether _stream variable required for this class?\n  private _stream: Stream;\n\n  id: string;\n  getSubscriberElement: () => HTMLElement | undefined;\n  isVideoEnabled: () => boolean;\n  isAudioEnabled: () => boolean;\n  enableVideo: () => void;\n  disableVideo: () => void;\n  enableAudio: () => void;\n  disableAudio: () => void;\n  setDisabledImageURI: (imageURI: string) => void;\n\n  constructor(\n    stream: Stream,\n    otSubscriber: OTSubscriber,\n    analytics: Analytics\n  ) {\n    super();\n    this._stream = stream;\n    const _subscriber = new Subscriber(otSubscriber);\n    otSubscriber.element?.classList.add('MP_screenshare_subscriber');\n\n    _subscriber.on('audioLevelUpdated', (audioLevel: number) => {\n      this.emit('audioLevelUpdated', audioLevel);\n    });\n\n    _subscriber.on('destroyed', () => this.emit('destroyed'));\n\n    _subscriber.on('videoElementCreated', () => {\n      this.emit('created');\n    });\n\n    this.id = _subscriber.id as string;\n\n    this.getSubscriberElement = () => _subscriber?.getSubscriberElement();\n\n    this.isVideoEnabled = () => _subscriber?.isVideoEnabled();\n\n    this.isAudioEnabled = () => _subscriber?.isAudioEnabled();\n\n    this.enableVideo = (): void => {\n      analytics.log(\n        logAction.screenSubscriberEnableVideo,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.enableVideo();\n        analytics.log(\n          logAction.screenSubscriberEnableVideo,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenSubscriberEnableVideo,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.disableVideo = (): void => {\n      analytics.log(\n        logAction.screenSubscriberDisableVideo,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.disableVideo();\n        analytics.log(\n          logAction.screenSubscriberDisableVideo,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenSubscriberDisableVideo,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.enableAudio = (): void => {\n      analytics.log(\n        logAction.screenSubscriberEnableAudio,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.enableAudio();\n        analytics.log(\n          logAction.screenSubscriberEnableAudio,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenSubscriberEnableAudio,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.disableAudio = (): void => {\n      analytics.log(\n        logAction.screenSubscriberDisableAudio,\n        logVariation.attempt\n      );\n      if (_subscriber) {\n        _subscriber.disableAudio();\n        analytics.log(\n          logAction.screenSubscriberDisableAudio,\n          logVariation.success\n        );\n      } else {\n        analytics.log(\n          logAction.screenSubscriberDisableAudio,\n          logVariation.failure\n        );\n      }\n    };\n\n    this.setDisabledImageURI = (imageURI: string): void => {\n      _subscriber.setDisabledImageURI(imageURI);\n    };\n  }\n}\n\nexport default ScreenSubscriber;\n\n/* We can't use a promise here because the videoElementCreated event may be fired between\n * calling resolve() and the success handler being executed. Instead we use a synchronous callback.\n */\nexport const createScreenSubscriber = (\n  session: Session,\n  stream: Stream,\n  analytics: Analytics,\n  callback: (error?: OTError, subscriber?: ScreenSubscriber) => void\n): void => {\n  analytics.log(logAction.createScreenSubscriber, logVariation.attempt);\n  const _otSubscriber = session.subscribe(\n    stream,\n    'layoutContainer',\n    {\n      insertMode: 'append',\n      style: {\n        buttonDisplayMode: 'off',\n        nameDisplayMode: 'off',\n        videoDisabledDisplayMode: 'off',\n      },\n    },\n    error => {\n      if (error) {\n        analytics.log(logAction.createScreenSubscriber, logVariation.failure);\n        callback(error);\n      } else {\n        const screenSubscriber = new ScreenSubscriber(\n          stream,\n          _otSubscriber,\n          analytics\n        );\n        analytics.log(logAction.createScreenSubscriber, logVariation.success);\n        callback(undefined, screenSubscriber);\n      }\n    }\n  );\n};\n","/**\n * This Speaker Detection algorithm is based on https://tokbox.com/developer/guides/customize-ui/js/#active_speaker\n * Some values had to be modified for better detection of the speaker as well as once they stop speaking\n */\n\nimport { EventEmitter } from 'events';\n\nconst SPEAKER_DETECTED_FIRST_TIME_INTERVAL = 100; // this is milliseconds\nconst LOW_AUDIO_DETECTED_INTERVAL = 100; // this is milliseconds\nconst MIN_AUDIO_LEVEL = 0;\n\ntype SpeakerChangeDetected = {\n  isSpeaking: boolean;\n};\n\ntype Activity = {\n  timestamp: number;\n  talking: boolean;\n};\n\ndeclare interface SpeakerDetection {\n  emit(\n    event: 'activeSpeakerStatusChanged',\n    payload: SpeakerChangeDetected\n  ): boolean;\n  on(\n    event: 'activeSpeakerStatusChanged',\n    listener: (payload: SpeakerChangeDetected) => void\n  ): this;\n}\n\nclass SpeakerDetection extends EventEmitter {\n  activity = {} as Activity;\n  onAudioLevelUpdated(audioLevel: number) {\n    const now = Date.now();\n    const isTalking = audioLevel > MIN_AUDIO_LEVEL;\n\n    if (isTalking) {\n      //checking below if the activity object has been initialized\n      if (Object.keys(this.activity).length === 0) {\n        // this is the first time we are hearing the person talk\n        // initializing the initial variable\n        this.activity = { timestamp: now, talking: false };\n      } else if (this.activity.talking) {\n        // the person is currently talking\n        this.activity.timestamp = now;\n      } else if (\n        now - this.activity.timestamp >\n        SPEAKER_DETECTED_FIRST_TIME_INTERVAL\n      ) {\n        // This part filters out random short noise\n        // The person is currently speaking if they have been speaking for awhile\n        this.activity.talking = true;\n        this.emit('activeSpeakerStatusChanged', {\n          isSpeaking: true,\n        });\n      }\n    } else if (\n      Object.keys(this.activity).length !== 0 &&\n      now - this.activity.timestamp > LOW_AUDIO_DETECTED_INTERVAL\n    ) {\n      // The person may have stopped talking but we give them a period of time before dispatching the event to remove CSS for this active speaker\n      // (this takes into account pauses when one speaks)\n      if (this.activity.talking) {\n        this.emit('activeSpeakerStatusChanged', {\n          isSpeaking: false,\n        });\n        // if the active speaker changes externally, the activity tracker gets reset\n        this.reset();\n      }\n    }\n  }\n\n  reset() {\n    this.activity = {} as Activity;\n  }\n}\n\nexport default SpeakerDetection;\n","import { EventEmitter } from 'events';\nimport { throttle } from 'lodash';\nimport Participant from '../internal/participant';\nimport SpeakerDetection from './speaker-detection';\n\ntype SubscriberAudioLevels = Record<string, number>;\n\nexport type ActiveSpeakerInfo = {\n  subscriberId: string | undefined;\n  movingAvg: number;\n  participant: Participant | undefined;\n};\n\ntype ParticipantBySubscriberId = {\n  [key: string]: Participant;\n};\ntype ActiveSpeakerChangedPayload = {\n  previousActiveSpeaker: ActiveSpeakerInfo;\n  newActiveSpeaker: ActiveSpeakerInfo;\n};\ntype SpeakerChangeDetected = {\n  isSpeaking: boolean;\n};\ndeclare interface ActiveSpeakerTracker {\n  emit(\n    event: 'activeSpeakerStatusChanged',\n    payload: SpeakerChangeDetected\n  ): boolean;\n  on(\n    event: 'activeSpeakerStatusChanged',\n    listener: (payload: SpeakerChangeDetected) => void\n  ): this;\n  emit(\n    event: 'activeSpeakerChanged',\n    payload: ActiveSpeakerChangedPayload\n  ): boolean;\n  on(\n    event: 'activeSpeakerChanged',\n    listener: (payload: ActiveSpeakerChangedPayload) => void\n  ): this;\n}\n\nconst CALCULATE_ACTIVE_SPEAKER_THROTTLE_TIME = 1500;\nclass ActiveSpeakerTracker extends EventEmitter {\n  _subscriberAudioLevelsBySubscriberId: SubscriberAudioLevels = {};\n  _participantsBySubscriberId: ParticipantBySubscriberId = {};\n  activeSpeaker: ActiveSpeakerInfo;\n  speakerDetection: SpeakerDetection;\n  calculateActiveSpeaker: () => void;\n\n  constructor() {\n    super();\n    this.activeSpeaker = {\n      movingAvg: 0,\n      subscriberId: undefined,\n      participant: undefined,\n    };\n\n    this.speakerDetection = new SpeakerDetection();\n\n    this.speakerDetection.on('activeSpeakerStatusChanged', payload => {\n      this.emit('activeSpeakerStatusChanged', payload);\n    });\n\n    this.calculateActiveSpeaker = throttle(\n      this._calculateActiveSpeaker,\n      CALCULATE_ACTIVE_SPEAKER_THROTTLE_TIME,\n      {\n        // So we don't send events after subscriber is destroyed\n        leading: true,\n        trailing: false,\n      }\n    );\n  }\n  onCameraSubscriberDestroyed = (subscriberId: string) => {\n    delete this._subscriberAudioLevelsBySubscriberId[subscriberId];\n    delete this._participantsBySubscriberId[subscriberId];\n    if (this.activeSpeaker.subscriberId === subscriberId) {\n      this.activeSpeaker = {\n        subscriberId: undefined,\n        movingAvg: 0,\n        participant: undefined,\n      };\n    }\n    this.calculateActiveSpeaker();\n  };\n\n  onSubscriberAudioLevelUpdated = ({\n    subscriberId,\n    movingAvg,\n    participant,\n    audioLevel,\n  }: {\n    subscriberId: string;\n    movingAvg: number;\n    participant: Participant;\n    audioLevel: number;\n  }) => {\n    this._subscriberAudioLevelsBySubscriberId[subscriberId] = movingAvg;\n    this._participantsBySubscriberId[subscriberId] = participant;\n    this.calculateActiveSpeaker();\n\n    if (subscriberId === this.activeSpeaker.subscriberId) {\n      this.speakerDetection.onAudioLevelUpdated(audioLevel);\n    }\n  };\n\n  _calculateActiveSpeaker = () => {\n    const subscriberIdAudioLevelKeyValuePair = Object.entries(\n      this._subscriberAudioLevelsBySubscriberId\n    );\n    const activeSpeaker = subscriberIdAudioLevelKeyValuePair.reduce<\n      ActiveSpeakerInfo\n    >(\n      (acc, [subscriberId, movingAvg]) => {\n        if (movingAvg > acc.movingAvg) {\n          return {\n            subscriberId,\n            movingAvg,\n            participant: this._participantsBySubscriberId[subscriberId],\n          };\n        }\n        return acc;\n      },\n      {\n        subscriberId: undefined,\n        movingAvg: 0,\n        participant: undefined,\n      }\n    );\n\n    if (\n      activeSpeaker.subscriberId !== this.activeSpeaker.subscriberId &&\n      activeSpeaker.movingAvg > 0.2\n    ) {\n      const previousActiveSpeaker = { ...this.activeSpeaker };\n      this.activeSpeaker = activeSpeaker;\n      this.emit('activeSpeakerChanged', {\n        newActiveSpeaker: activeSpeaker,\n        previousActiveSpeaker,\n      });\n      this.speakerDetection.reset();\n    }\n  };\n}\n\nexport default ActiveSpeakerTracker;\n","import { Connection } from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport CameraSubscriber from '../mp/camera-subscriber';\nimport ScreenSubscriber from '../mp/screen-subscriber';\n\ndeclare interface Participant {\n  on(\n    event: 'cameraCreated',\n    listener: (cameraSubscriber: CameraSubscriber) => void\n  ): this;\n  on(\n    event: 'screenCreated',\n    listener: (cameraSubscriber: ScreenSubscriber) => void\n  ): this;\n  on(event: 'cameraDestroyed', listener: () => void): this;\n  on(event: 'screenDestroyed', listener: () => void): this;\n}\nclass Participant extends EventEmitter {\n  id: string;\n  connection: Connection;\n  camera?: CameraSubscriber;\n  screen?: ScreenSubscriber;\n  name: string | null = null;\n  isParticipantJoinedSent: boolean = false;\n  connectionData: string;\n  isMe: false = false;\n\n  constructor(connection: Connection) {\n    super();\n    this.connection = connection;\n    const { connectionId, data } = connection;\n    this.id = connectionId;\n    this.connectionData = data;\n  }\n\n  setCameraSubscriber(cameraSubscriber: CameraSubscriber) {\n    this.camera = cameraSubscriber;\n    cameraSubscriber.on('created', () => {\n      this.emit('cameraCreated', cameraSubscriber);\n    });\n    cameraSubscriber.on('destroyed', () => {\n      this.emit('cameraDestroyed');\n    });\n  }\n\n  setScreenSubscriber(screenSubscriber: ScreenSubscriber) {\n    this.screen = screenSubscriber;\n    screenSubscriber.on('created', () => {\n      this.emit('screenCreated');\n    });\n    screenSubscriber.on('destroyed', () => {\n      this.emit('screenDestroyed');\n    });\n  }\n}\n\nexport default Participant;\n","import { EventEmitter } from 'events';\nimport Participant from '../internal/participant';\nimport CameraSubscriber from '../mp/camera-subscriber';\nimport ScreenSubscriber from '../mp/screen-subscriber';\n\ndeclare interface ParticipantWrapper {\n  on(\n    event: 'cameraCreated',\n    listener: (cameraSubscriber: CameraSubscriber) => void\n  ): this;\n  on(\n    event: 'screenCreated',\n    listener: (cameraSubscriber: ScreenSubscriber) => void\n  ): this;\n  on(event: 'cameraDestroyed', listener: () => void): this;\n  on(event: 'screenDestroyed', listener: () => void): this;\n}\n\nclass ParticipantWrapper extends EventEmitter {\n  id: string;\n  camera?: CameraSubscriber;\n  screen?: ScreenSubscriber;\n  name?: string;\n  connectionData: string;\n  isMe: false = false;\n\n  constructor(participant: Participant) {\n    super();\n    this.id = participant.id;\n    this.connectionData = participant.connectionData;\n\n    /*\n     * Here we use defineProperty to set a getting because participant.screen\n     * and participant.camera are initially undefined and setting e.g.:\n     * this.camera = participant.camera would not work when the object reference changes.\n     */\n    Object.defineProperty(this, 'camera', { get: () => participant.camera });\n    Object.defineProperty(this, 'screen', { get: () => participant.screen });\n    Object.defineProperty(this, 'name', {\n      get: () => participant.name,\n    });\n\n    participant.on('cameraCreated', cameraSubscriber => {\n      this.emit('cameraCreated', cameraSubscriber);\n    });\n\n    participant.on('cameraDestroyed', () => {\n      this.emit('cameraDestroyed');\n    });\n\n    participant.on('screenCreated', screenSubscriber => {\n      this.emit('screenCreated', screenSubscriber);\n    });\n\n    participant.on('screenDestroyed', () => {\n      this.emit('screenDestroyed');\n    });\n  }\n}\n\nexport default ParticipantWrapper;\n","export const removeUndefinedProperties = (\n  properties: Record<string, any>\n): Record<string, string> => {\n  return Object.entries(properties).reduce((acc, [propName, value]) => {\n    if (value !== undefined) {\n      acc[propName] = value;\n    }\n    return acc;\n  }, {} as Record<string, any>);\n};\n\nexport const deleteAllEntries = (object: Record<string, any>) => {\n  Object.keys(object).forEach(key => {\n    delete object[key];\n  });\n};\n","import UAParser from 'ua-parser-js';\n\n/* Using a permissive value here to include large phones and any future large phones while excluding tablets\nSee common device sizes here: https://experienceleague.adobe.com/docs/target/using/experiences/vec/mobile-viewports.html?lang=en\nE.g. Samsung Galaxy Note 5\t480. iPhone 12 Pro Max: 428.\nNote this is to be used with max-device-width query which uses CSS pixel width which takes into account pixel density.\n*/\nconst MAX_MOBILE_WIDTH = 500;\n\nconst uaParser = new UAParser(navigator.userAgent);\nconst uaDevice = uaParser.getDevice();\n\nconst hasTouchScreen = (): boolean => {\n  if ('maxTouchPoints' in navigator) {\n    return navigator.maxTouchPoints > 0;\n  }\n  const query = window.matchMedia('(pointer:coarse)');\n  return query.matches;\n};\n\nconst hasMobileScreenWidth = (): boolean => {\n  const query = window.matchMedia(`(max-device-width: ${MAX_MOBILE_WIDTH}px)`);\n  return query.matches;\n};\n\n/* Determine whether device is a mobile.\n *  - First try to determine via user agent detection\n *  - If that fails then check for touchscreen and a mobile size screen\n */\nexport const isMobile = (): boolean => {\n  if (uaDevice.type) {\n    return uaDevice.type === 'mobile';\n  }\n  return hasMobileScreenWidth() && hasTouchScreen();\n};\n","export type ExternalPromiseResolver = {\n  promise: Promise<unknown>;\n  resolver: () => void;\n  rejector: () => void;\n};\n\nexport const createExternalPromiseResolver = (): ExternalPromiseResolver => {\n  let resolver, rejector;\n  const promise = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  // We must catch the promise otherwise jest will fail\n  promise.catch(() => {});\n  return {\n    promise,\n    // @ts-ignore\n    resolver,\n    // @ts-ignore\n    rejector,\n  };\n};\n","import { Connection } from '@opentok/client';\nimport { EventEmitter } from 'events';\n\nclass LocalParticipant extends EventEmitter {\n  id: string;\n  name?: string;\n  connectionData: string;\n  isMe: true = true;\n\n  constructor(connection: Connection, name?: string) {\n    super();\n    this.id = connection.connectionId;\n    this.name = name;\n    this.connectionData = connection.data;\n  }\n}\n\nexport default LocalParticipant;\n","import { EventEmitter } from 'events';\nimport LocalParticipant from '../internal/local-participant';\n\nclass LocalParticipantWrapper extends EventEmitter {\n  id: string;\n  name?: string;\n  connectionData: string;\n  isMe: true = true;\n\n  constructor(localParticipant: LocalParticipant) {\n    super();\n    this.id = localParticipant.id;\n    this.connectionData = localParticipant.connectionData;\n    this.name = localParticipant.name;\n  }\n}\n\nexport default LocalParticipantWrapper;\n","import OT, { Connection } from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport LayoutManager, { LayoutOptions } from '../mp/layout-manager';\nimport CameraPublisher from '../mp/camera-publisher';\nimport CameraSubscriber, {\n  createCameraSubscriber,\n} from '../mp/camera-subscriber';\nimport ScreenPublisher from '../mp/screen-publisher';\nimport ScreenSubscriber, {\n  createScreenSubscriber,\n} from '../mp/screen-subscriber';\nimport ActiveSpeakerTracker, {\n  ActiveSpeakerInfo,\n} from '../mp/active-speaker-tracker';\nimport { getTargetElementFromDOM, createDiv } from '../utils/dom';\nimport Participant from './participant';\nimport ParticipantWrapper from '../mp/participant';\nimport { RoomProperties, LayoutMode, IceConfig } from '../utils/types';\nimport { Analytics, logAction, logVariation } from '../analytics';\nimport { deleteAllEntries, removeUndefinedProperties } from '../utils/object';\nimport { SignalOptions, SignalEvent } from '../types/signaling';\nimport { logger } from '../logging';\nimport { isMobile } from '../utils/is-mobile';\nimport {\n  createExternalPromiseResolver,\n  ExternalPromiseResolver,\n} from '../utils/promise';\nimport LocalParticipant from './local-participant';\nimport LocalParticipantWrapper from '../mp/local-participant';\n\nconst PARTICIPANT_NAME_RECEIVED_TIMEOUT = 300;\n\ndeclare interface Room {\n  on(event: 'connected', listener: () => void): this; // session connected event\n  on(event: 'disconnected', listener: (reason: string) => void): this; // session disconnected event\n  on(event: 'reconnecting', listener: () => void): this; // session reconnecting event\n  on(event: 'reconnected', listener: () => void): this; // session reconnected event\n  on(event: 'cameraPublisherMediaDisabled', listener: () => void): this;\n  on(\n    event: 'cameraSubscriberVideoDisabled',\n    listener: (id: string) => void\n  ): this;\n  on(\n    event: 'participantJoined',\n    listener: (participant: ParticipantWrapper) => void\n  ): this;\n  on(\n    event: 'participantLeft',\n    listener: (participant: ParticipantWrapper, reason: string) => void\n  ): this;\n  on(\n    event: 'activeSpeakerChanged',\n    listener: (participant: ParticipantWrapper) => void\n  ): this;\n  on(event: 'signal', listener: (event: SignalEvent) => void): this;\n}\n\ntype CameraSubscriberById = Record<string, CameraSubscriber>;\ntype ScreenSubscriberById = Record<string, ScreenSubscriber>;\n\nclass Room extends EventEmitter {\n  apiKey: string;\n  roomId: string;\n  token: string;\n  iceConfig?: IceConfig;\n  roomContainer: HTMLElement | string;\n  managedLayoutOptions?: LayoutOptions;\n  mediaShutoffThreshold?: number;\n  maxVideoParticipantsOnScreen?: number;\n  useMobileLayout: boolean;\n  participants: Record<string, Participant | LocalParticipant> = {};\n  participantWrappers: Record<\n    string,\n    ParticipantWrapper | LocalParticipantWrapper\n  > = {};\n  camera: CameraPublisher;\n  screen: ScreenPublisher;\n  participantName: string;\n\n  private _waitUntilJoined: ExternalPromiseResolver;\n  private _analytics: Analytics;\n  private _session: OT.Session;\n  private _layoutManager: LayoutManager;\n  private _activeSpeakerTracker: ActiveSpeakerTracker;\n\n  private _cameraSubscribers: CameraSubscriberById = {};\n  private _screenSubscribers: ScreenSubscriberById = {};\n  private _visibleParticipantsCount: number = 0;\n\n  constructor(roomProperties: RoomProperties) {\n    super();\n    logger.debug('Initializing room with properties', roomProperties);\n    const {\n      apiKey,\n      sessionId,\n      token,\n      roomContainer,\n      mediaShutoffThreshold,\n      maxVideoParticipantsOnScreen,\n      managedLayoutOptions = {},\n      participantName = '',\n      iceConfig,\n    } = roomProperties;\n\n    this._analytics = new Analytics({ sessionId, apiKey });\n    this._analytics.log(logAction.initRoom, logVariation.attempt, {\n      roomProperties,\n    });\n\n    if (!apiKey || !sessionId || !token) {\n      const error =\n        'Invalid credentials. Check the API_KEY, TOKEN, SESSION_ID passed';\n      this._analytics.log(logAction.initRoom, logVariation.failure, { error });\n      logger.error(error);\n      throw new Error(error);\n    }\n\n    this.apiKey = apiKey;\n    this.roomId = sessionId;\n    this.token = token;\n    this.iceConfig = iceConfig;\n    this.roomContainer = roomContainer || this._createDefaultRoomContainer();\n    this.mediaShutoffThreshold = mediaShutoffThreshold;\n\n    this._waitUntilJoined = createExternalPromiseResolver();\n\n    if (\n      (maxVideoParticipantsOnScreen !== undefined &&\n        typeof maxVideoParticipantsOnScreen !== 'number') ||\n      (typeof maxVideoParticipantsOnScreen === 'number' &&\n        maxVideoParticipantsOnScreen < 0)\n    ) {\n      logger.warn(\n        'Warning: maxVideoParticipantsOnScreen must be a number greater than or equal to 0. Received: ',\n        maxVideoParticipantsOnScreen\n      );\n    } else {\n      this.maxVideoParticipantsOnScreen = maxVideoParticipantsOnScreen;\n    }\n\n    this.participantName = participantName;\n\n    const {\n      deviceLayoutMode = 'auto',\n      ...layoutOptions\n    } = managedLayoutOptions;\n    this.useMobileLayout =\n      deviceLayoutMode === 'mobile' ||\n      (deviceLayoutMode === 'auto' && isMobile());\n\n    logger.debug('Initializing room with layout manager');\n    this.managedLayoutOptions = {\n      layoutMode: 'grid',\n      isMobileLayout: this.useMobileLayout,\n      ...layoutOptions,\n    };\n\n    this._session = OT.initSession(this.apiKey, this.roomId, {\n      iceConfig: this.iceConfig,\n    });\n\n    this._layoutManager = new LayoutManager(\n      this.roomContainer,\n      this.managedLayoutOptions,\n      maxVideoParticipantsOnScreen\n    );\n    this._layoutManager.on('layoutComplete', () => {\n      this._setOptimalSubscriberResolutions();\n    });\n    this._layoutManager.on(\n      'cameraSubscriberHidden',\n      this._onCameraSubscriberHiddenByLayoutManager\n    );\n    this._layoutManager.on(\n      'cameraSubscriberDisplayed',\n      this._onCameraSubscriberDisplayedByLayoutManager\n    );\n\n    this.camera = new CameraPublisher(\n      this._session,\n      this._getDefaultPublisherElement(),\n      this._analytics,\n      this.participantName\n    );\n\n    this.screen = new ScreenPublisher(\n      this._session,\n      this._getDefaultPublisherElement('screen'),\n      this._analytics\n    );\n\n    this._activeSpeakerTracker = new ActiveSpeakerTracker();\n\n    this._activeSpeakerTracker.on(\n      'activeSpeakerChanged',\n      this._onActiveSpeakerChanged\n    );\n\n    this._activeSpeakerTracker.on(\n      'activeSpeakerStatusChanged',\n      this._onActiveSpeakerStatusChanged\n    );\n\n    this._analytics.log(logAction.initRoom, logVariation.success);\n  }\n\n  _attachOTSessionEventListeners = () => {\n    this._session.on('sessionConnected', () => {\n      logger.debug('Connected to session');\n      this.emit('connected');\n    });\n\n    this._session.on('sessionDisconnected', event => {\n      const { reason } = event;\n      logger.debug(`SessionDisconnect, reason: ${reason}`);\n      if (this.camera) {\n        this.camera.destroyCameraPublisher();\n      }\n\n      if (this.screen) {\n        this.screen.stop();\n      }\n\n      this.emit('disconnected', reason);\n    });\n\n    this._session.on('sessionReconnecting', () => {\n      logger.debug('Session Reconnecting');\n      this.emit('reconnecting');\n    });\n\n    this._session.on('sessionReconnected', () => {\n      logger.debug('Session Reconnected');\n      this.emit('reconnected');\n    });\n\n    this._session.on('streamCreated', async event => {\n      // Wait until we have joined call before subscribing\n      try {\n        await this._waitUntilJoined.promise;\n      } catch (e) {\n        // Join failed, disregard stream\n        return;\n      }\n\n      const { stream } = event;\n      const {\n        connection: { connectionId },\n      } = stream;\n\n      const participant = this.participants[connectionId];\n\n      if (participant && !participant.isMe) {\n        logger.debug(`Stream created for participant: ${connectionId}`);\n        this._onParticipantStreamCreated(\n          this._session,\n          stream,\n          participant,\n          this._shouldEnableParticipantVideo()\n        );\n      } else {\n        logger.info(\n          `No participant found for new stream with connection id ${connectionId}`\n        );\n      }\n    });\n\n    this._session.on('streamDestroyed', event => {\n      const { stream } = event;\n      const {\n        connection: { connectionId },\n      } = stream;\n\n      const participant = this.participants[connectionId];\n\n      if (participant) {\n        logger.debug(`Stream destroyed for participant: ${connectionId}`);\n        this._onParticipantStreamDestroyed();\n      }\n\n      if (!this.useMobileLayout && this._shouldEnableParticipantVideo()) {\n        logger.info('Subscribing to all participants video');\n        Object.values(this.participants).forEach(participant => {\n          if (!participant.isMe) {\n            participant.camera?.enableVideo();\n          }\n        });\n      }\n    });\n\n    this._session.on('connectionCreated', async event => {\n      const { connection } = event;\n      const { participant, participantWrapper } = this._createParticipant(\n        connection\n      );\n      if (!this._isMe(connection)) {\n        try {\n          await this._sendParticipantName(connection);\n        } catch (error) {\n          logger.warn(\n            'Attempted to send the participant name to a participant that is already disconnected.'\n          );\n        }\n\n        setTimeout(() => {\n          // Check if the participant is still connected.\n          if (!this.participants[participant.id]) {\n            return;\n          }\n\n          if (this.participants[participant.id].name === null) {\n            logger.info(\n              'Timeout waiting for participant name, using empty name.'\n            );\n            this._onParticipantNameReceived(participantWrapper, '');\n          }\n        }, PARTICIPANT_NAME_RECEIVED_TIMEOUT);\n      }\n    });\n\n    this._session.on('connectionDestroyed', event => {\n      const { connection, reason } = event;\n      const participantId = connection.connectionId;\n      const participant = this.participants[participantId];\n      if (participant && !participant.isMe) {\n        const { isParticipantJoinedSent } = participant;\n        const participantWrapper = this.participantWrappers[participantId];\n        delete this.participantWrappers[participantId];\n        delete this.participants[participantId];\n        if (isParticipantJoinedSent) {\n          logger.info(`Participant left: ${participantWrapper}`);\n          this.emit('participantLeft', participantWrapper, reason);\n        }\n      }\n    });\n\n    this._session.on('signal', this._onSignalReceived);\n  };\n\n  _createParticipant = (\n    connection: Connection\n  ): {\n    participant: Participant | LocalParticipant;\n    participantWrapper: ParticipantWrapper | LocalParticipantWrapper;\n  } => {\n    let participant, participantWrapper;\n    if (this._isMe(connection)) {\n      ({ participant, participantWrapper } = this._createLocalParticipant(\n        connection,\n        this.participantName\n      ));\n    } else {\n      ({ participant, participantWrapper } = this._createRemoteParticipant(\n        connection\n      ));\n    }\n    this.participants[participant.id] = participant;\n    this.participantWrappers[participant.id] = participantWrapper;\n    return {\n      participant,\n      participantWrapper,\n    };\n  };\n\n  _createLocalParticipant = (\n    connection: Connection,\n    name?: string\n  ): {\n    participant: LocalParticipant;\n    participantWrapper: LocalParticipantWrapper;\n  } => {\n    const participant = new LocalParticipant(connection, name);\n    const participantWrapper = new LocalParticipantWrapper(participant);\n\n    return {\n      participant,\n      participantWrapper,\n    };\n  };\n\n  _createRemoteParticipant = (\n    connection: Connection\n  ): {\n    participant: Participant;\n    participantWrapper: ParticipantWrapper;\n  } => {\n    const participant = new Participant(connection);\n    const participantWrapper = new ParticipantWrapper(participant);\n\n    return {\n      participant,\n      participantWrapper,\n    };\n  };\n\n  _removeOTSessionEventListeners = () => {\n    this._session.off();\n  };\n\n  _createDefaultRoomContainer = () => {\n    const element = createDiv('roomContainer', {\n      width: '100vw',\n      height: '100vh',\n      position: 'relative',\n    });\n    document.body.appendChild(element);\n    return element;\n  };\n\n  _getDefaultPublisherElement = (\n    type: 'camera' | 'screen' = 'camera'\n  ): HTMLElement => {\n    const {\n      managedLayoutOptions: {\n        screenPublisherContainer,\n        cameraPublisherContainer,\n      } = {},\n    } = this;\n    const customContainer =\n      type === 'camera' ? cameraPublisherContainer : screenPublisherContainer;\n    if (customContainer) {\n      return getTargetElementFromDOM(customContainer);\n    }\n    // default target is layout managed div\n    return this._layoutManager.getLayoutContainerElement();\n  };\n\n  _connect = (): Promise<void> => {\n    return new Promise((resolve, reject) => {\n      this._session.connect(this.token, error => {\n        if (error) {\n          reject(error);\n        } else {\n          this._analytics.update(\n            this._session.sessionId,\n            this._session.connection!.connectionId,\n            this.apiKey\n          );\n          logger.info('Session connected');\n          resolve();\n        }\n      });\n    });\n  };\n\n  _isMe = (connection: OT.Connection | null): boolean =>\n    !!connection &&\n    this._session?.connection?.connectionId === connection.connectionId;\n\n  get participantId() {\n    return this._session?.connection?.connectionId ?? '';\n  }\n\n  get participantConnectionData() {\n    return this._session?.connection?.data ?? '';\n  }\n\n  _setOptimalSubscriberResolutions = () => {\n    Object.values(this._cameraSubscribers).forEach(\n      (cSubscriber: CameraSubscriber) => {\n        cSubscriber.setOptimalPreferredResolution();\n      }\n    );\n  };\n\n  _getCameraSubscriberElement = (subscriberId?: string) => {\n    if (!subscriberId) {\n      return undefined;\n    }\n    return this._cameraSubscribers[subscriberId].getSubscriberElement();\n  };\n\n  _onParticipantNameReceived = (\n    participantWrapper: ParticipantWrapper | LocalParticipantWrapper,\n    name: string\n  ) => {\n    const participantId = participantWrapper.id;\n    if (this.participants[participantId]) {\n      // Set the name\n      this.participants[participantId].name = name;\n      const participant = this.participants[participantId];\n\n      // Make sure we emit participantJoined only one time.\n      if (!participant.isMe && !participant.isParticipantJoinedSent) {\n        participant.isParticipantJoinedSent = true;\n        this.emit('participantJoined', participantWrapper);\n      }\n    }\n  };\n\n  _onSignalReceived = (event: {\n    type?: string;\n    data?: string;\n    from: OT.Connection | null;\n  }) => {\n    const participantSenderWrapper = event.from\n      ? this.participantWrappers[event.from.connectionId]\n      : null;\n    if (\n      participantSenderWrapper &&\n      event.type === 'signal:MP_INTERNAL_PARTICIPANT_NAME' &&\n      !this._isMe(event.from)\n    ) {\n      this._onParticipantNameReceived(\n        participantSenderWrapper,\n        event.data ?? ''\n      );\n      return;\n    }\n    const signalData = {\n      type: event.type,\n      data: event.data,\n      from: participantSenderWrapper,\n      isSentByMe: this._isMe(event.from),\n    };\n    this.emit('signal', signalData);\n  };\n\n  _onCameraSubscriberCreated = (\n    stream: OT.Stream,\n    cameraSubscriber: CameraSubscriber\n  ) => {\n    this._cameraSubscribers[cameraSubscriber.id] = cameraSubscriber;\n    const element = cameraSubscriber.getSubscriberElement();\n    cameraSubscriber.on('created', () => {\n      this._layoutManager.onCameraSubscriberCreated(element);\n    });\n\n    cameraSubscriber.on('destroyed', () => {\n      this._activeSpeakerTracker.onCameraSubscriberDestroyed(\n        cameraSubscriber.id\n      );\n      this._layoutManager?.onCameraSubscriberDestroyed(element);\n      delete this._cameraSubscribers[cameraSubscriber.id];\n    });\n  };\n\n  _onScreenSubscriberCreated = (\n    stream: OT.Stream,\n    screenSubscriber: ScreenSubscriber\n  ) => {\n    this._screenSubscribers[screenSubscriber.id] = screenSubscriber;\n    screenSubscriber.on('created', () => {\n      this._layoutManager.onScreenSubscriberCreated(screenSubscriber.id);\n    });\n\n    screenSubscriber.on('destroyed', () => {\n      const subscriberId = screenSubscriber.id;\n      this._layoutManager.onScreenSubscriberDestroyed(subscriberId);\n      delete this._screenSubscribers[subscriberId];\n    });\n  };\n\n  _onActiveSpeakerStatusChanged = (payload: { isSpeaking: boolean }) => {\n    this._layoutManager.onActiveSpeakerStatusChanged(payload);\n  };\n\n  _onActiveSpeakerChanged = ({\n    newActiveSpeaker,\n    previousActiveSpeaker,\n  }: {\n    newActiveSpeaker: ActiveSpeakerInfo;\n    previousActiveSpeaker: ActiveSpeakerInfo;\n  }) => {\n    const newActiveSpeakerElement = this._getCameraSubscriberElement(\n      newActiveSpeaker.subscriberId\n    );\n\n    const previousActiveSpeakerElement = this._getCameraSubscriberElement(\n      previousActiveSpeaker.subscriberId\n    );\n\n    this._layoutManager.onActiveSpeakerChanged({\n      newActiveSpeakerElement,\n      previousActiveSpeakerElement,\n    });\n    this.emit('activeSpeakerChanged', newActiveSpeaker.participant);\n  };\n\n  _sendParticipantName = (to?: OT.Connection): Promise<void> =>\n    new Promise((resolve, reject) => {\n      this._session.signal(\n        removeUndefinedProperties({\n          to,\n          type: 'MP_INTERNAL_PARTICIPANT_NAME',\n          data: this.participantName,\n        }),\n        err => {\n          if (err) {\n            reject(err);\n          }\n          resolve();\n        }\n      );\n    });\n\n  _shouldEnableParticipantVideo = () =>\n    this.maxVideoParticipantsOnScreen === undefined ||\n    this._visibleParticipantsCount < this.maxVideoParticipantsOnScreen;\n\n  _shouldDisablePublisherMedia = () =>\n    !!this.mediaShutoffThreshold &&\n    Object.keys(this.participants).length > this.mediaShutoffThreshold;\n\n  _onParticipantStreamDestroyed = async () => {\n    this._visibleParticipantsCount =\n      this._visibleParticipantsCount > 0\n        ? this._visibleParticipantsCount - 1\n        : 0;\n  };\n\n  _onParticipantStreamCreated = async (\n    session: OT.Session,\n    stream: OT.Stream,\n    participant: Participant,\n    shouldEnableVideo: boolean\n  ): Promise<void> => {\n    const { videoType } = stream;\n\n    if (videoType === 'screen') {\n      createScreenSubscriber(\n        session,\n        stream,\n        this._analytics,\n        (err, screenSubscriber) => {\n          if (!err && screenSubscriber) {\n            participant.setScreenSubscriber(screenSubscriber);\n            this._onScreenSubscriberCreated(stream, screenSubscriber);\n          }\n        }\n      );\n    } else {\n      createCameraSubscriber(\n        session,\n        stream,\n        shouldEnableVideo,\n        this._analytics,\n        (err, cameraSubscriber) => {\n          if (!err && cameraSubscriber) {\n            participant.setCameraSubscriber(cameraSubscriber);\n            this._onCameraSubscriberCreated(stream, cameraSubscriber);\n            cameraSubscriber.on(\n              'audioLevelUpdated',\n              (audioLevel, movingAvg) => {\n                this._activeSpeakerTracker.onSubscriberAudioLevelUpdated({\n                  subscriberId: cameraSubscriber.id,\n                  movingAvg,\n                  participant,\n                  audioLevel,\n                });\n              }\n            );\n          }\n        }\n      );\n      if (!shouldEnableVideo) {\n        this.emit('cameraSubscriberVideoDisabled', participant.id);\n      }\n      this._visibleParticipantsCount = this._visibleParticipantsCount + 1;\n    }\n  };\n\n  _onCameraSubscriberHiddenByLayoutManager = (subscriberId: string) => {\n    const cameraSubscriber = this._cameraSubscribers[subscriberId];\n    if (cameraSubscriber) {\n      logger.debug(\n        'Camera subscriber to be hidden in layout, unsubscribing to video: ',\n        cameraSubscriber.id\n      );\n      cameraSubscriber.disableVideo();\n    }\n  };\n  _onCameraSubscriberDisplayedByLayoutManager = (subscriberId: string) => {\n    const cameraSubscriber = this._cameraSubscribers[subscriberId];\n    if (cameraSubscriber) {\n      logger.debug(\n        'Camera subscriber to be displayed in layout, subscribing to video: ',\n        cameraSubscriber.id\n      );\n      cameraSubscriber.enableVideo();\n      const videoElement = this._getCameraSubscriberElement(subscriberId);\n      if (videoElement) {\n        this._layoutManager._removeSubscriberOnLoad(videoElement);\n      }\n    }\n  };\n\n  join = async (\n    publisherOptions: {\n      targetElement?: HTMLElement | string;\n      publisherProperties?: OT.PublisherProperties;\n    } = {}\n  ): Promise<void> => {\n    const { targetElement, publisherProperties = {} } = publisherOptions;\n    publisherProperties.name = this.participantName;\n\n    logger.info('Joining room');\n    this._analytics.log(logAction.joinRoom, logVariation.attempt, {\n      publisherOptions,\n    });\n\n    this._attachOTSessionEventListeners();\n\n    let publisherCreated = false;\n    let connected = false;\n\n    const joinFailureCleanup = () => {\n      this._waitUntilJoined.rejector();\n      this._cleanupOnDisconnect();\n      if (publisherCreated) {\n        this.camera.destroyCameraPublisher();\n      }\n      if (connected) {\n        this._session.disconnect();\n      }\n    };\n\n    try {\n      this.camera.on('destroyed', this._onCameraPublisherDestroyed);\n      await this.camera.initPublisher({\n        targetElement,\n        publisherProperties,\n      });\n      publisherCreated = true;\n    } catch (error) {\n      logger.error(\n        'Failed to join room: could not initialize camera publish.',\n        error\n      );\n      this._analytics.log(logAction.joinRoom, logVariation.failure, {\n        error,\n      });\n      joinFailureCleanup();\n      throw error;\n    }\n\n    try {\n      await this._connect();\n      connected = true;\n    } catch (error) {\n      logger.error('Failed to join room: could not connect to session.', error);\n      this._analytics.log(logAction.joinRoom, logVariation.failure, {\n        error,\n      });\n      joinFailureCleanup();\n      throw error;\n    }\n\n    if (this._shouldDisablePublisherMedia()) {\n      this.camera.disableAudio();\n      this.camera.disableVideo();\n      logger.info(\n        'mediaShutoffThreshold reached. Turning off publisher audio and video.'\n      );\n      this.emit('cameraPublisherMediaDisabled');\n    }\n\n    try {\n      await this.camera.publish();\n      logger.debug('Published camera');\n    } catch (error) {\n      logger.error('Failed to join room: failed to publish to session', error);\n      this._analytics.log(logAction.joinRoom, logVariation.failure, {\n        error,\n      });\n      joinFailureCleanup();\n      throw error;\n    }\n\n    this._analytics.log(logAction.joinRoom, logVariation.success);\n    this._waitUntilJoined.resolver();\n    this._layoutManager.updateLayout();\n  };\n\n  _cleanupOnDisconnect = () => {\n    this._removeOTSessionEventListeners();\n    this.camera.off('destroyed', this._onCameraPublisherDestroyed);\n    this._waitUntilJoined = createExternalPromiseResolver();\n    deleteAllEntries(this.participants);\n    deleteAllEntries(this.participantWrappers);\n  };\n\n  leave = (): Promise<void> => {\n    logger.info('Leaving room');\n    this._analytics.log(logAction.leaveRoom, logVariation.attempt);\n    this._cleanupOnDisconnect();\n    return new Promise((resolve, reject) => {\n      try {\n        this._session.on('sessionDisconnected', () => {\n          this._analytics.log(logAction.leaveRoom, logVariation.success);\n          logger.info('Left room');\n          resolve();\n        });\n        this._session.disconnect();\n      } catch (error) {\n        this._analytics.log(logAction.leaveRoom, logVariation.failure, {\n          error,\n        });\n        logger.warn('Error leaving room', error);\n        reject(error);\n      }\n    });\n  };\n  _onCameraPublisherDestroyed = () => {\n    logger.error('Disconnecting room because Camera Publisher was destroyed');\n    this._cleanupOnDisconnect();\n    this._session.disconnect();\n    this.emit('disconnected', 'cameraPublisherError');\n  };\n\n  setLayoutMode = (mode: LayoutMode) => {\n    if (this._layoutManager) {\n      this._layoutManager.setLayoutMode(mode);\n    } else {\n      logger.error(\n        'Attempted to set layout mode, but are not using layout manager.'\n      );\n      throw new Error('Cannot set layout mode when not using layout manager');\n    }\n  };\n\n  startScreensharing = (targetElement?: HTMLElement | string) => {\n    this._analytics.log(logAction.startScreenSharing, logVariation.attempt);\n    return this.screen\n      .start(targetElement)\n      .then(() => {\n        logger.info('Started screen sharing.');\n        this._layoutManager.updateLayout();\n        this._analytics.log(logAction.startScreenSharing, logVariation.success);\n      })\n      .catch(error => {\n        logger.error('Screen sharing failed.');\n        this._analytics.log(\n          logAction.startScreenSharing,\n          logVariation.failure,\n          {\n            error,\n          }\n        );\n        throw error;\n      });\n  };\n\n  stopScreensharing = () => {\n    this._analytics.log(logAction.stopScreenSharing, logVariation.attempt);\n    this.screen.stop();\n    logger.info('Stopped screen sharing.');\n    this._layoutManager.updateLayout();\n    this._analytics.log(logAction.stopScreenSharing, logVariation.success);\n  };\n\n  signal({\n    to,\n    data,\n    type,\n    retryAfterReconnect,\n  }: SignalOptions): Promise<void> {\n    const participant = to && (this.participants[to.id] as Participant);\n    const signalingOptions = removeUndefinedProperties({\n      data,\n      type,\n      retryAfterReconnect,\n      to: participant?.connection,\n    });\n    logger.debug('Sending signal', signalingOptions);\n    return new Promise((resolve, reject) => {\n      this._session.signal(signalingOptions, err => {\n        if (err) {\n          logger.error('Signal failed', err);\n          reject(err);\n        }\n        resolve();\n      });\n    });\n  }\n}\n\nexport default Room;\n","import OT from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport Room from '../../internal/room';\nimport {\n  LayoutMode,\n  ManagedLayoutOptions,\n  RoomProperties,\n  IceConfig,\n} from '../../utils/types';\nimport Participant from '../../internal/participant';\nimport CameraPublisher from '../camera-publisher';\nimport ScreenPublisher from '../screen-publisher';\nimport ParticipantWrapper from '../participant';\nimport { SignalOptions, SignalEvent } from '../../types/signaling';\nimport LocalParticipantWrapper from '../local-participant';\n\ndeclare interface RoomWrapper {\n  on(event: 'connected', listener: () => void): this; // session connected event\n  on(event: 'disconnected', listener: (reason: string) => void): this; // session disconnected event\n  on(event: 'reconnecting', listener: () => void): this; // session reconnecting event\n  on(event: 'reconnected', listener: () => void): this; // session reconnected event\n  on(event: 'cameraPublisherMediaDisabled', listener: () => void): this;\n  on(\n    event: 'cameraSubscriberVideoDisabled',\n    listener: (id: string) => void\n  ): this;\n  on(\n    event: 'participantJoined',\n    listener: (participant: Participant) => void\n  ): this;\n  on(\n    event: 'participantLeft',\n    listener: (participant: Participant, reason: string) => void\n  ): this;\n  on(\n    event: 'activeSpeakerChanged',\n    listener: (participant: Participant) => void\n  ): this;\n  on(event: 'signal', listener: (event: SignalEvent) => void): this;\n}\n\nclass RoomWrapper extends EventEmitter {\n  apiKey: string;\n  roomId: string;\n  token: string;\n  iceConfig?: IceConfig;\n  roomContainer?: HTMLElement | string;\n  managedLayoutOptions?: ManagedLayoutOptions;\n  mediaShutoffThreshold?: number;\n  maxVideoParticipantsOnScreen?: number;\n  camera: CameraPublisher;\n  screen: ScreenPublisher;\n  participants: Record<string, ParticipantWrapper | LocalParticipantWrapper>;\n  participantId?: string;\n  participantName?: string;\n  analytics: any;\n  participantConnectionData?: string;\n\n  join: (publisherOptions?: {\n    targetElement?: HTMLElement | string;\n    publisherProperties?: OT.PublisherProperties;\n  }) => Promise<void>;\n  leave: () => Promise<void>;\n  setLayoutMode: (mode: LayoutMode) => void;\n  startScreensharing: (targetElement?: HTMLElement | string) => Promise<void>;\n  stopScreensharing: () => void;\n  signal: (payload: SignalOptions) => Promise<void>;\n\n  constructor(props: RoomProperties) {\n    super();\n\n    this.apiKey = props.apiKey;\n    this.roomId = props.sessionId;\n    this.token = props.token;\n    this.iceConfig = props.iceConfig;\n    this.roomContainer = props.roomContainer;\n    this.managedLayoutOptions = props.managedLayoutOptions;\n    this.mediaShutoffThreshold = props.mediaShutoffThreshold;\n    this.maxVideoParticipantsOnScreen = props.maxVideoParticipantsOnScreen;\n\n    const room = new Room(props);\n\n    this.camera = room.camera;\n    this.screen = room.screen;\n    this.participants = room.participantWrappers;\n    Object.defineProperty(this, 'participantId', {\n      get: () => room.participantId,\n    });\n    Object.defineProperty(this, 'participantName', {\n      get: () => room.participantName,\n    });\n    Object.defineProperty(this, 'participantConnectionData', {\n      get: () => room.participantConnectionData,\n    });\n\n    const _attachEventsToRoomWrapper = async (): Promise<void> => {\n      room.on('connected', () => {\n        this.emit('connected');\n      });\n\n      room.on('disconnected', (reason: string) =>\n        this.emit('disconnected', reason)\n      );\n\n      room.on('reconnecting', () => {\n        this.emit('reconnecting');\n      });\n\n      room.on('reconnected', () => {\n        this.emit('reconnected');\n      });\n\n      room.on('cameraPublisherMediaDisabled', () => {\n        this.emit('cameraPublisherMediaDisabled');\n      });\n\n      room.on('cameraSubscriberVideoDisabled', (id: string) => {\n        this.emit('cameraSubscriberVideoDisabled', id);\n      });\n\n      room.on('participantJoined', (participant: ParticipantWrapper) => {\n        this.emit('participantJoined', participant);\n      });\n\n      room.on(\n        'participantLeft',\n        (participant: ParticipantWrapper, reason: string) => {\n          this.emit('participantLeft', participant, reason);\n        }\n      );\n\n      room.on('activeSpeakerChanged', (participant: ParticipantWrapper) => {\n        this.emit('activeSpeakerChanged', participant);\n      });\n\n      room.on('signal', (event: SignalEvent) => {\n        // type comes as 'signal:type' or just 'signal'\n        const strippedType = event.type?.split('signal:')?.[1] ?? '';\n        this.emit('signal', event);\n        if (strippedType) {\n          this.emit(`signal:${strippedType}`, event);\n        }\n      });\n    };\n\n    _attachEventsToRoomWrapper();\n\n    this.join = (\n      publisherOptions: {\n        targetElement?: HTMLElement | string;\n        publisherProperties?: OT.PublisherProperties;\n      } = {}\n    ): Promise<void> => room.join(publisherOptions);\n\n    this.leave = () => room.leave();\n\n    this.setLayoutMode = (mode: LayoutMode) => room.setLayoutMode(mode);\n\n    this.startScreensharing = (targetElement?: HTMLElement | string) =>\n      room.startScreensharing(targetElement);\n\n    this.stopScreensharing = () => room.stopScreensharing();\n\n    this.signal = (payload: SignalOptions) => room.signal(payload);\n  }\n}\n\nexport default RoomWrapper;\n","import OT, { Device } from '@opentok/client';\nimport { EventEmitter } from 'events';\nimport Publisher from '../internal/publisher';\nimport { getTargetElementFromDOM } from '../utils/dom';\nimport { Analytics, logAction, logVariation } from '../analytics';\nimport { VideoFilter } from '../utils/types';\n\ndeclare interface PreviewPublisher {\n  on(event: 'audioLevelUpdated', listener: (audioLevel: number) => void): this;\n  on(event: 'created', listener: () => void): this;\n  on(event: 'destroyed', listener: () => void): this;\n  on(event: 'accessAllowed', listener: () => void): this;\n  on(event: 'accessDenied', listener: () => void): this;\n  on(event: 'accessDialogOpened', listener: () => void): this;\n  on(event: 'accessDialogClosed', listener: (reason: string) => void): this;\n}\n\nclass PreviewPublisher extends EventEmitter {\n  private _defaultTargetElement: HTMLElement | string;\n\n  isVideoEnabled: () => boolean;\n  isAudioEnabled: () => boolean;\n  enableVideo: () => void;\n  disableVideo: () => void;\n  enableAudio: () => void;\n  disableAudio: () => void;\n  getVideoDevice: () => Device;\n  setVideoDevice: (deviceId: string) => Promise<void>;\n  getAudioDevice: () => Promise<Device>;\n  setAudioDevice: (deviceId: string) => Promise<void>;\n  destroy: () => void;\n  previewMedia: (publisherOptions: {\n    targetElement?: HTMLElement | string;\n    publisherProperties?: OT.PublisherProperties;\n  }) => Promise<void>;\n  setVideoFilter: (videoFilter: VideoFilter) => Promise<void>;\n  clearVideoFilter: () => Promise<void>;\n  setDisabledImageURI: (imageURI: string) => void;\n\n  constructor(defaultTargetElement: HTMLElement | string) {\n    super();\n    const analytics = new Analytics();\n    this._defaultTargetElement = defaultTargetElement;\n\n    const _publisher = new Publisher();\n\n    const _attachEventsToPreviewPublisher = (): void => {\n      _publisher.on('audioLevelUpdated', (audioLevel: number) => {\n        this.emit('audioLevelUpdated', audioLevel);\n      });\n\n      _publisher.on('videoElementCreated', () => this.emit('created'));\n\n      _publisher.on('destroyed', () => this.emit('destroyed'));\n\n      _publisher.on('accessAllowed', () => this.emit('accessAllowed'));\n\n      _publisher.on('accessDenied', () => this.emit('accessDenied'));\n\n      _publisher.on('accessDialogOpened', () =>\n        this.emit('accessDialogOpened')\n      );\n\n      _publisher.on('accessDialogClosed', (reason: string) =>\n        this.emit('accessDialogClosed', reason)\n      );\n    };\n\n    this.isVideoEnabled = (): boolean => _publisher.isVideoEnabled();\n\n    this.isAudioEnabled = (): boolean => _publisher.isAudioEnabled();\n\n    this.enableVideo = (): void => {\n      analytics.log(\n        logAction.previewPublisherEnableVideo,\n        logVariation.attempt\n      );\n      _publisher.enableVideo();\n      analytics.log(\n        logAction.previewPublisherEnableVideo,\n        logVariation.success\n      );\n    };\n\n    this.disableVideo = (): void => {\n      analytics.log(\n        logAction.previewPublisherDisableVideo,\n        logVariation.attempt\n      );\n      _publisher.disableVideo();\n      analytics.log(\n        logAction.previewPublisherDisableVideo,\n        logVariation.success\n      );\n    };\n\n    this.enableAudio = (): void => {\n      analytics.log(\n        logAction.previewPublisherEnableAudio,\n        logVariation.attempt\n      );\n      _publisher.enableAudio();\n      analytics.log(\n        logAction.previewPublisherEnableAudio,\n        logVariation.success\n      );\n    };\n\n    this.disableAudio = (): void => {\n      analytics.log(\n        logAction.previewPublisherDisableAudio,\n        logVariation.attempt\n      );\n      _publisher.disableAudio();\n      analytics.log(\n        logAction.previewPublisherDisableAudio,\n        logVariation.success\n      );\n    };\n\n    this.getVideoDevice = (): Device => _publisher.getVideoDevice();\n\n    this.setVideoDevice = (deviceId: string): Promise<void> =>\n      _publisher.setVideoDevice(deviceId);\n\n    this.getAudioDevice = (): Promise<Device> => _publisher.getAudioDevice();\n\n    this.setAudioDevice = (deviceId: string): Promise<void> =>\n      _publisher.setAudioDevice(deviceId);\n\n    this.destroy = (): void => {\n      analytics.log(logAction.destroyPreviewPublisher, logVariation.attempt);\n      _publisher.destroyOTPublisher();\n      analytics.log(logAction.destroyPreviewPublisher, logVariation.success);\n    };\n\n    this.previewMedia = async (\n      publisherOptions: {\n        targetElement?: HTMLElement | string;\n        publisherProperties?: OT.PublisherProperties;\n      } = {}\n    ): Promise<void> => {\n      const { targetElement, publisherProperties } = publisherOptions;\n      analytics.log(logAction.initPreviewPublisher, logVariation.attempt, {\n        publisherProperties,\n      });\n      const target = getTargetElementFromDOM(\n        targetElement ?? this._defaultTargetElement\n      );\n      try {\n        _attachEventsToPreviewPublisher();\n        await _publisher.initOTPublisher(target, publisherProperties);\n        analytics.log(logAction.initPreviewPublisher, logVariation.success);\n      } catch (error) {\n        analytics.log(logAction.initPreviewPublisher, logVariation.failure, {\n          error,\n        });\n        throw error;\n      }\n    };\n\n    this.setVideoFilter = async (videoFilter: VideoFilter) => {\n      try {\n        analytics.log(logAction.setVideoFilter, logVariation.attempt);\n        await _publisher.setVideoFilter(videoFilter);\n        analytics.log(logAction.setVideoFilter, logVariation.success);\n      } catch (error) {\n        analytics.log(logAction.setVideoFilter, logVariation.failure, {\n          error,\n        });\n        throw error;\n      }\n    };\n\n    this.clearVideoFilter = async () => {\n      analytics.log(logAction.clearVideoFilter, logVariation.attempt);\n      try {\n        await _publisher.clearVideoFilter();\n        analytics.log(logAction.clearVideoFilter, logVariation.success);\n      } catch (error) {\n        analytics.log(logAction.clearVideoFilter, logVariation.failure, {\n          error,\n        });\n        throw error;\n      }\n    };\n    this.setDisabledImageURI = (imageURI: string): void => {\n      _publisher.setDisabledImageURI(imageURI);\n    };\n  }\n}\n\nexport default PreviewPublisher;\n","import OT, { AudioOutputDevice } from '@opentok/client';\nimport { Analytics, logAction, logVariation } from '../analytics';\n\nconst analytics = new Analytics();\n\nconst getActiveAudioOutputDevice = async (): Promise<AudioOutputDevice> => {\n  analytics.log(logAction.getActiveAudioOutputDevice, logVariation.attempt);\n  try {\n    const activeDevice = await OT.getActiveAudioOutputDevice();\n    analytics.log(logAction.getActiveAudioOutputDevice, logVariation.success);\n    return activeDevice;\n  } catch (error) {\n    analytics.log(logAction.getActiveAudioOutputDevice, logVariation.failure);\n    throw new Error('Not able to get active audio output device');\n  }\n};\n\nexport default getActiveAudioOutputDevice;\n","import OT, { AudioOutputDevice } from '@opentok/client';\nimport { Analytics, logAction, logVariation } from '../analytics';\n\nconst analytics = new Analytics();\n\nconst getAudioOutputDevices = async (): Promise<AudioOutputDevice[]> => {\n  analytics.log(logAction.getAudioOutputDevices, logVariation.attempt);\n  try {\n    const devices = await OT.getAudioOutputDevices();\n    analytics.log(logAction.getAudioOutputDevices, logVariation.success);\n    return devices;\n  } catch (error) {\n    analytics.log(logAction.getAudioOutputDevices, logVariation.failure);\n    throw new Error('Not able to get available audio output device');\n  }\n};\n\nexport default getAudioOutputDevices;\n","import OT from '@opentok/client';\nimport { Analytics, logAction, logVariation } from '../analytics';\nimport ConfigStore from './config-store';\n\n// Sets up proxies for both OT and VE\nconst setProxyUrl = async (proxyUrl: string): Promise<void> => {\n  ConfigStore.setProxyUrl(proxyUrl);\n\n  try {\n    // Makes sure that OT-specific requests and events are proxied\n    OT.setProxyUrl(proxyUrl);\n\n    // Note: we instantiate after URL is configured\n    const analytics = new Analytics();\n\n    // Yes, this `attempt` log is misleading.  We log the attempt after we\n    // already did it.  We can't log before setting the proxy url, since the\n    // event will leak and not go through the proxy.\n    analytics.log(logAction.setProxyUrl, logVariation.attempt);\n    analytics.log(logAction.setProxyUrl, logVariation.success);\n  } catch (error) {\n    // Note: we don't bother to generate a client event log for this\n    // failture.  We just throw instead.  Reason being, we don't want any\n    // logs to leak out.  Logs and requests *must* go through the proxy.\n    throw new Error('There is an issue with URL provided.');\n  }\n};\n\nexport default setProxyUrl;\n","import OT from '@opentok/client';\nimport { Analytics, logAction, logVariation } from '../analytics';\nimport { logger } from '../logging';\n\nconst setAudioOutputDevice = async (deviceId: string): Promise<void> => {\n  const analytics = new Analytics();\n  analytics.log(logAction.setAudioOutputDevice, logVariation.attempt);\n  try {\n    logger.info('Set audio output device: ', deviceId);\n    await OT.setAudioOutputDevice(deviceId);\n    analytics.log(logAction.setAudioOutputDevice, logVariation.success);\n  } catch (error) {\n    analytics.log(logAction.setAudioOutputDevice, logVariation.failure);\n    logger.warn('Not able to set the audio output device', deviceId);\n    throw new Error('Not able to set the audio output device');\n  }\n};\n\nexport default setAudioOutputDevice;\n","import Room from './mp/room';\nimport PreviewPublisher from './mp/preview-publisher';\nimport getDevices from './mp/get-devices';\nimport getActiveAudioOutputDevice from './mp/get-active-audio-output-device';\nimport getAudioOutputDevices from './mp/get-audio-output-devices';\nimport setProxyUrl from './mp/set-proxy-url';\nimport setAudioOutputDevice from './mp/set-audio-output-device';\nimport hasMediaProcessorSupport from './mp/has-media-processor-support';\nimport { setLogLevel, logLevel } from './logging';\nimport { Device, DeviceKind } from './types/device';\nconst { publicVersion: version } = require('../package.json');\n\nexport {\n  Room,\n  PreviewPublisher,\n  version,\n  getActiveAudioOutputDevice,\n  getDevices,\n  getAudioOutputDevices,\n  setAudioOutputDevice,\n  setLogLevel,\n  setProxyUrl,\n  hasMediaProcessorSupport,\n  logLevel,\n  Device,\n  DeviceKind,\n};\n","import OT from '@opentok/client';\n\nexport default () => OT.hasMediaProcessorSupport();\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","getTargetElementFromDOM","element","HTMLElement","ele","document","getElementById","createDiv","id","style","createElement","entries","setProperty","jss","setup","preset","use","camelCase","proxyUrl","createStyles","styles","createStyleSheet","attach","classes","logLevel","NONE","ERROR","WARN","INFO","DEBUG","currentLogLevel","logger","console","warn","debug","removeItem","array","item","index","indexOf","splice","HiddenTileTracker","maxVideoParticipantsOnScreen","PARTICIPANT_DISPLAY_LIMIT","_removeLastActiveVisibleElement","lastActiveVisibleElement","visibleElements","_this","_elementsOrderedByDisplayPriority","hiddenElements","onActiveSpeakerChanged","_currentActiveSpeakerElement","includes","onSubscriberCreated","onSubscriberRemoved","elementToShow","audioButton","position","left","bottom","height","width","background","backdropFilter","borderRadius","opacity","display","icon","createSvgIcon","svgSrc","src","otherClasses","classList","add","createAudioToggleButton","isAudioEnabled","enabledIcon","disabledIcon","button","appendChild","setEnabled","remove","setDisabled","paddingLeft","paddingRight","textAlign","fontSize","fontStyle","lineHeight","whiteSpace","overflow","textOverflow","maxWidth","marginLeft","networkQualityWarning","justifyContent","alignItems","minWidth","networkQualityIcon","active","videoOverlay","zIndex","bottomRightContainer","top","right","createOverlay","targetId","participantName","targetVideoContainerDiv","overlayClass","overlayId","audioToggleButton","createPublisherAudioToggleButton","createSubscriberAudioToggleButton","overlayDiv","div","show","hide","createNetworkQualityWarning","nameElement","innerText","overlay","assign","EventEmitter","setAudioEnabled","setAudioDisabled","showNetworkQualityWarning","hideNetworkQualityWarning","addEventListener","emit","Subscriber","otSubscriber","_subscribingToAudio","disableAudio","enableAudio","_this$otSubscriber","_this$otSubscriber2","stream","_this$otSubscriber2$s","hasVideo","_this$otSubscriber3","_this$otSubscriber3$s","hasAudio","shouldSubscribe","_this$otSubscriber4","subscribeToVideo","_this$otSubscriber6","subscribeToAudio","imageURI","setStyle","audioLevelUpdatedHandler","throttle","event","audioLevel","leading","trailing","on","videoType","_this$otSubscriber$st2","_toggleAudioEnabled","_this$overlay4","_this$overlay5","reason","ConfigStore","url","defaultProps","source","window","location","origin","Analytics","analyticsProps","sessionId","connectionId","apiKey","analytics","addSessionInfo","partnerId","action","variation","payload","data","logEvent","otkanalyticsData","clientVersion","componentId","options","OTKAnalytics","update","smileIconDataURI","subscriberOnLoad","CameraSubscriber","_stream","movingAvg","_subscriber","Math","log","LN10","min","max","setOptimalPreferredResolution","videoElementWidth","_otSubscriber2$elemen","offsetWidth","videoElementHeight","_otSubscriber2$elemen2","offsetHeight","preferredResolution","devicePixelRatio","setPreferredResolution","getSubscriberElement","isVideoEnabled","enableVideo","disableVideo","setDisabledImageURI","createCameraSubscriber","session","shouldEnableVideo","callback","_otSubscriber","subscribe","insertMode","buttonDisplayMode","nameDisplayMode","videoDisabledDisplayMode","backgroundImageURI","iconSmileyFace","cameraSubscriber","defaultLayoutOptions","fixedRatio","bigPercentage","bigFixedRatio","bigAlignItems","smallAlignItems","Infinity","maxHeight","smallMaxWidth","smallMaxHeight","bigMaxWidth","bigMaxHeight","bigMaxRatio","bigMinRatio","bigFirst","fixedLayoutOptions","bigClass","animate","ignoreClass","LayoutManager","targetElement","layoutOptions","roomContainerElement","roomContainer","layoutContainerElement","layoutContainerWrapperElement","layoutContainer","margin","borderColor","_speakerHighlightColor","borderWidth","borderStyle","layoutContainerWrapper","throttledRecalculateLayout","_recalculateTileSizes","ResizeObserverPolyfill","observe","_layoutContainerElement","layoutMode","_layoutMode","updateLayout","getComputedStyle","_cameraSubscriberElementIds","childNodes","node","_setElementSmall","_screenSharingElementIds","_setElementBig","elementToSetBig","_getActiveSpeakerViewLargeElement","_setAllElementsSmall","_activeSpeakerElement","subscriber","querySelector","publisher","_hideElement","_displayElement","_hiddenTileTracker","_this$_hiddenTileTrac","subscriberId","isViewingScreenshare","customOTLayoutJsOptions","_isMobileLayout","isMobileLayout","speakerHighlightColor","_speakerHighlightEnabled","speakerHighlightEnabled","minRatio","maxRatio","_initLayoutContainerElement","_emitLayoutRecalculated","debounce","_layoutContainer","initLayout","_initContainerResizeListener","newActiveSpeakerElement","previousActiveSpeakerElement","onActiveSpeakerStatusChanged","isSpeaking","layout","getLayoutContainerElement","_displayOnlyScreenElement","_displayOnlyActiveSpeaker","_displayLimitedGridElements","_setOnlyScreenElementsBig","_setOnlyActiveSpeakerElementBig","getDevices","OT","devices","getDeviceIdFromSettings","track","getSettings","deviceId","getDeviceIdFromDevicesList","currentDevice","find","device","label","getDeviceId","_attachEventsToOTPublisher","onDestroyed","_onVideoElementCreated","_initPublisherForCamera","_otPublisher","initPublisher","otPublisher","_initPublisherForScreen","checkScreenSharingCapability","response","supported","extensionRegistered","videoSource","showControls","videoContentHint","Publisher","publisherOptions","_otPublisherPromise","divId","_this$otPublisher","_this$otPublisher2","getVideoSource","_this$otPublisher2$ge","_this$otPublisher3","getAudioSource","_this$otPublisher3$ge","enabled","_this$otPublisher4","publishVideo","_this$otPublisher5","publishAudio","videoDevice","kind","videoDeviceId","_this$otPublisher8","setVideoSource","_this$otPublisher9","audioDeviceId","_this$otPublisher10","setAudioSource","_this$otPublisher11","destroy","videoFilter","_this$otPublisher12","applyVideoFilter","_this$otPublisher13","clearVideoFilter","CameraPublisher","defaultTargetElement","_defaultTargetElement","_publisher","getVideoDevice","setVideoDevice","getAudioDevice","audioDevice","setAudioDevice","destroyCameraPublisher","destroyOTPublisher","publisherProperties","target","initOTPublisher","publish","getOTPublisher","setVideoFilter","ScreenPublisher","_attachEventsToScreenPublisher","start","screenPub","isScreenSharing","_publisher3","_publisher4","ScreenSubscriber","createScreenSubscriber","screenSubscriber","SpeakerDetection","onAudioLevelUpdated","now","Date","activity","timestamp","talking","ActiveSpeakerTracker","_subscriberAudioLevelsBySubscriberId","_participantsBySubscriberId","activeSpeaker","participant","calculateActiveSpeaker","speakerDetection","reduce","acc","previousActiveSpeaker","newActiveSpeaker","_calculateActiveSpeaker","Participant","connection","connectionData","setCameraSubscriber","camera","_this2","setScreenSubscriber","screen","_this3","ParticipantWrapper","get","removeUndefinedProperties","properties","deleteAllEntries","uaDevice","UAParser","navigator","userAgent","getDevice","createExternalPromiseResolver","resolver","rejector","promise","LocalParticipant","LocalParticipantWrapper","localParticipant","Room","roomProperties","_session","_waitUntilJoined","participants","isMe","_onParticipantStreamCreated","_shouldEnableParticipantVideo","_onParticipantStreamDestroyed","useMobileLayout","_createParticipant","participantWrapper","_isMe","_sendParticipantName","setTimeout","_onParticipantNameReceived","participantId","isParticipantJoinedSent","participantWrappers","_onSignalReceived","_createLocalParticipant","_createRemoteParticipant","off","body","managedLayoutOptions","customContainer","cameraPublisherContainer","screenPublisherContainer","_layoutManager","connect","token","_analytics","_cameraSubscribers","cSubscriber","participantSenderWrapper","from","signalData","isSentByMe","onCameraSubscriberCreated","_activeSpeakerTracker","onCameraSubscriberDestroyed","_screenSubscribers","onScreenSubscriberCreated","onScreenSubscriberDestroyed","_getCameraSubscriberElement","to","signal","_visibleParticipantsCount","mediaShutoffThreshold","_onScreenSubscriberCreated","_onCameraSubscriberCreated","onSubscriberAudioLevelUpdated","videoElement","_removeSubscriberOnLoad","_attachOTSessionEventListeners","publisherCreated","connected","joinFailureCleanup","_cleanupOnDisconnect","disconnect","_onCameraPublisherDestroyed","_connect","_shouldDisablePublisherMedia","_removeOTSessionEventListeners","mode","setLayoutMode","iceConfig","roomId","_createDefaultRoomContainer","deviceLayoutMode","matchMedia","matches","maxTouchPoints","initSession","_setOptimalSubscriberResolutions","_onCameraSubscriberHiddenByLayoutManager","_onCameraSubscriberDisplayedByLayoutManager","_getDefaultPublisherElement","_onActiveSpeakerChanged","_onActiveSpeakerStatusChanged","signalingOptions","retryAfterReconnect","_this$_session2","_this$_session2$conne","_this$_session3","_this$_session3$conne","RoomWrapper","props","room","participantConnectionData","strippedType","_event$type","split","_event$type$split","_attachEventsToRoomWrapper","join","leave","startScreensharing","stopScreensharing","PreviewPublisher","previewMedia","getActiveAudioOutputDevice","activeDevice","getAudioOutputDevices","setProxyUrl","setAudioOutputDevice","version","require","publicVersion","hasMediaProcessorSupport","level"],"mappings":"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"}