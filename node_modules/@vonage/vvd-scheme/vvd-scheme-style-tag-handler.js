import { PredefinedScheme } from './vvd-scheme-foundation.js';
const getSchemeModule = (scheme) => {
    switch (scheme) {
        case PredefinedScheme.DARK:
            return import('./scheme.dark.css.js');
        case PredefinedScheme.LIGHT:
        default:
            return import('./scheme.light.css.js');
    }
};
const STYLE_ELEMENT_CLASS = 'vvd-scheme-style';
const style = ensureStyleMount(STYLE_ELEMENT_CLASS);
function ensureStyleMount(schemeStylesheetClass) {
    let result;
    const existing = document.querySelectorAll(`.${schemeStylesheetClass}`);
    if (existing.length) {
        console.error(`found ${existing.length} scheme styles upon init while expected for 1, check your dependencies configuration`);
        result = existing[0];
    }
    else {
        result = document.createElement('style');
        result.className = STYLE_ELEMENT_CLASS;
        document.head.appendChild(result);
    }
    return result;
}
export async function applySchemeCSS(scheme) {
    const schemeModule = await getSchemeModule(scheme);
    const cssResult = schemeModule === null || schemeModule === void 0 ? void 0 : schemeModule.style;
    if (cssResult) {
        style.innerHTML = cssResult.cssText || '';
    }
}
//# sourceMappingURL=vvd-scheme-style-tag-handler.js.map